[{"/home/nullchilly/code/git/web101/src/app/computer/[slug]/page.tsx":"1","/home/nullchilly/code/git/web101/src/app/computer/page.tsx":"2","/home/nullchilly/code/git/web101/src/app/forget/page.tsx":"3","/home/nullchilly/code/git/web101/src/app/human/[slug]/page.tsx":"4","/home/nullchilly/code/git/web101/src/app/human/page.tsx":"5","/home/nullchilly/code/git/web101/src/app/layout.tsx":"6","/home/nullchilly/code/git/web101/src/app/login/page.tsx":"7","/home/nullchilly/code/git/web101/src/app/minimax/page.tsx":"8","/home/nullchilly/code/git/web101/src/app/page.tsx":"9","/home/nullchilly/code/git/web101/src/app/playground/socketio/page.tsx":"10","/home/nullchilly/code/git/web101/src/app/playground/websocket/page.tsx":"11","/home/nullchilly/code/git/web101/src/app/profile/page.tsx":"12","/home/nullchilly/code/git/web101/src/app/puzzle/page.tsx":"13","/home/nullchilly/code/git/web101/src/app/random/page.tsx":"14","/home/nullchilly/code/git/web101/src/app/settings/page.tsx":"15","/home/nullchilly/code/git/web101/src/app/settings/password/page.tsx":"16","/home/nullchilly/code/git/web101/src/app/signup/page.tsx":"17","/home/nullchilly/code/git/web101/src/app/stat/page.tsx":"18","/home/nullchilly/code/git/web101/src/app/videos/fakeData.ts":"19","/home/nullchilly/code/git/web101/src/app/videos/page.tsx":"20","/home/nullchilly/code/git/web101/src/components/Card/BotSelector.tsx":"21","/home/nullchilly/code/git/web101/src/components/Card/PlayerCard.tsx":"22","/home/nullchilly/code/git/web101/src/components/Card/PlayerInfoCard.tsx":"23","/home/nullchilly/code/git/web101/src/components/Card/PrepareCard.tsx":"24","/home/nullchilly/code/git/web101/src/components/ChessGame/ChessGame.tsx":"25","/home/nullchilly/code/git/web101/src/components/Controls/Controls.tsx":"26","/home/nullchilly/code/git/web101/src/components/Controls/ControlsPuzzle.tsx":"27","/home/nullchilly/code/git/web101/src/components/HumanChessGame/HumanChessGame.tsx":"28","/home/nullchilly/code/git/web101/src/components/Modal/LoadingModal.tsx":"29","/home/nullchilly/code/git/web101/src/components/Modal/ModalContainer.tsx":"30","/home/nullchilly/code/git/web101/src/components/Modal/ModalEndGame.tsx":"31","/home/nullchilly/code/git/web101/src/components/Modal/ModalPlayBot.tsx":"32","/home/nullchilly/code/git/web101/src/components/Modal/ModalPlayHuman.tsx":"33","/home/nullchilly/code/git/web101/src/components/MoveList/MoveItem.tsx":"34","/home/nullchilly/code/git/web101/src/components/MoveList/MoveList.tsx":"35","/home/nullchilly/code/git/web101/src/components/Navbar/Navbar.tsx":"36","/home/nullchilly/code/git/web101/src/components/PlayerTimer/PlayerTimer.tsx":"37","/home/nullchilly/code/git/web101/src/components/PuzzleGame/PuzzleGame.tsx":"38","/home/nullchilly/code/git/web101/src/components/Settings/AccountSettings.tsx":"39","/home/nullchilly/code/git/web101/src/components/Settings/NavbarSettings.tsx":"40","/home/nullchilly/code/git/web101/src/components/Settings/PasswordSettings.tsx":"41","/home/nullchilly/code/git/web101/src/components/Tabs/Human.tsx":"42","/home/nullchilly/code/git/web101/src/components/ThemeProvider.tsx":"43","/home/nullchilly/code/git/web101/src/components/Videos/VideoComponent.tsx":"44","/home/nullchilly/code/git/web101/src/components/Videos/VideoGrid.tsx":"45","/home/nullchilly/code/git/web101/src/components/icons/BlackMove.tsx":"46","/home/nullchilly/code/git/web101/src/components/icons/BotIcon/Cat.tsx":"47","/home/nullchilly/code/git/web101/src/components/icons/BotIcon/Elephant.tsx":"48","/home/nullchilly/code/git/web101/src/components/icons/BotIcon/Monkey.tsx":"49","/home/nullchilly/code/git/web101/src/components/icons/BotIcon/Null.tsx":"50","/home/nullchilly/code/git/web101/src/components/icons/BotIcon/Owl.tsx":"51","/home/nullchilly/code/git/web101/src/components/icons/BotIcon/Penguin.tsx":"52","/home/nullchilly/code/git/web101/src/components/icons/BotIcon/Shark.tsx":"53","/home/nullchilly/code/git/web101/src/components/icons/BotIcon/index.tsx":"54","/home/nullchilly/code/git/web101/src/components/icons/Checkmate.tsx":"55","/home/nullchilly/code/git/web101/src/components/icons/ChessBoard.tsx":"56","/home/nullchilly/code/git/web101/src/components/icons/ChessBot.tsx":"57","/home/nullchilly/code/git/web101/src/components/icons/ChessPiece/BlackBishop.tsx":"58","/home/nullchilly/code/git/web101/src/components/icons/ChessPiece/BlackKing.tsx":"59","/home/nullchilly/code/git/web101/src/components/icons/ChessPiece/BlackKnight.tsx":"60","/home/nullchilly/code/git/web101/src/components/icons/ChessPiece/BlackPawn.tsx":"61","/home/nullchilly/code/git/web101/src/components/icons/ChessPiece/BlackQueen.tsx":"62","/home/nullchilly/code/git/web101/src/components/icons/ChessPiece/BlackRook.tsx":"63","/home/nullchilly/code/git/web101/src/components/icons/ChessPiece/WhiteBishop.tsx":"64","/home/nullchilly/code/git/web101/src/components/icons/ChessPiece/WhiteKing.tsx":"65","/home/nullchilly/code/git/web101/src/components/icons/ChessPiece/WhiteKnight.tsx":"66","/home/nullchilly/code/git/web101/src/components/icons/ChessPiece/WhitePawn.tsx":"67","/home/nullchilly/code/git/web101/src/components/icons/ChessPiece/WhiteQueen.tsx":"68","/home/nullchilly/code/git/web101/src/components/icons/ChessPiece/WhiteRook.tsx":"69","/home/nullchilly/code/git/web101/src/components/icons/ChessPiece/index.tsx":"70","/home/nullchilly/code/git/web101/src/components/icons/Crown.tsx":"71","/home/nullchilly/code/git/web101/src/components/icons/Duel.tsx":"72","/home/nullchilly/code/git/web101/src/components/icons/Facebook.tsx":"73","/home/nullchilly/code/git/web101/src/components/icons/FastChessLogo.tsx":"74","/home/nullchilly/code/git/web101/src/components/icons/Handshake.tsx":"75","/home/nullchilly/code/git/web101/src/components/icons/Human.tsx":"76","/home/nullchilly/code/git/web101/src/components/icons/Learn.tsx":"77","/home/nullchilly/code/git/web101/src/components/icons/PlayBotPoster.tsx":"78","/home/nullchilly/code/git/web101/src/components/icons/PlayHumanPoster.tsx":"79","/home/nullchilly/code/git/web101/src/components/icons/PlayPuzzlePoster.tsx":"80","/home/nullchilly/code/git/web101/src/components/icons/Puzzle.tsx":"81","/home/nullchilly/code/git/web101/src/components/icons/PuzzleLogo.tsx":"82","/home/nullchilly/code/git/web101/src/components/icons/SkipIcon.tsx":"83","/home/nullchilly/code/git/web101/src/components/icons/SlowChessLogo.tsx":"84","/home/nullchilly/code/git/web101/src/components/icons/Star.tsx":"85","/home/nullchilly/code/git/web101/src/components/icons/StockChess.tsx":"86","/home/nullchilly/code/git/web101/src/components/icons/Video.tsx":"87","/home/nullchilly/code/git/web101/src/components/icons/WhiteMove.tsx":"88","/home/nullchilly/code/git/web101/src/components/icons/bK.tsx":"89","/home/nullchilly/code/git/web101/src/components/icons/wK.tsx":"90","/home/nullchilly/code/git/web101/src/components/icons/wbK.tsx":"91","/home/nullchilly/code/git/web101/src/components/ui/button.tsx":"92","/home/nullchilly/code/git/web101/src/components/ui/input.tsx":"93","/home/nullchilly/code/git/web101/src/context/UserContext.tsx":"94","/home/nullchilly/code/git/web101/src/helpers/chess.ts":"95","/home/nullchilly/code/git/web101/src/helpers/chessEvaluations.ts":"96","/home/nullchilly/code/git/web101/src/helpers/images.ts":"97","/home/nullchilly/code/git/web101/src/helpers/string.ts":"98","/home/nullchilly/code/git/web101/src/helpers/types.ts":"99","/home/nullchilly/code/git/web101/src/hooks/useChess.tsx":"100","/home/nullchilly/code/git/web101/src/hooks/useChessHumanSocket.tsx":"101","/home/nullchilly/code/git/web101/src/hooks/useChessSocket.tsx":"102","/home/nullchilly/code/git/web101/src/hooks/useLocalStorage.tsx":"103","/home/nullchilly/code/git/web101/src/hooks/usePuzzleChess.tsx":"104","/home/nullchilly/code/git/web101/src/hooks/usePuzzleData.ts":"105","/home/nullchilly/code/git/web101/src/lib/utils.ts":"106","/home/nullchilly/code/git/web101/src/modules/async-utils/index.ts":"107","/home/nullchilly/code/git/web101/src/modules/backend-client/httpGetAllGameSlugs.ts":"108","/home/nullchilly/code/git/web101/src/modules/backend-client/httpGetPlayerTimeLeft.ts":"109","/home/nullchilly/code/git/web101/src/modules/backend-client/httpPostCreateBotGame.ts":"110","/home/nullchilly/code/git/web101/src/modules/backend-client/httpPostCreateHumanGame.ts":"111","/home/nullchilly/code/git/web101/src/pages/api/hello.ts":"112","/home/nullchilly/code/git/web101/src/pages/api/puzzle.ts":"113","/home/nullchilly/code/git/web101/src/pages/api/puzzleData/[id].ts":"114","/home/nullchilly/code/git/web101/src/types/index.ts":"115","/home/nullchilly/code/git/web101/src/components/Controls/HumanControls.tsx":"116","/home/nullchilly/code/git/web101/src/app/puzzle-duel/page.tsx":"117","/home/nullchilly/code/git/web101/src/components/Controls/ControlsPuzzleDuel.tsx":"118","/home/nullchilly/code/git/web101/src/components/Controls/PuzzleDuelHistory.tsx":"119","/home/nullchilly/code/git/web101/src/components/Modal/ModalDuel.tsx":"120","/home/nullchilly/code/git/web101/src/components/Modal/ModalError.tsx":"121","/home/nullchilly/code/git/web101/src/components/PuzzleGame/PuzzleDuel.tsx":"122","/home/nullchilly/code/git/web101/src/helpers/const.ts":"123","/home/nullchilly/code/git/web101/src/hooks/usePuzzleDuelSocket.tsx":"124","/home/nullchilly/code/git/web101/src/app/admin/page.tsx":"125","/home/nullchilly/code/git/web101/src/components/Admin/AdminPage.tsx":"126","/home/nullchilly/code/git/web101/src/components/icons/Admin.tsx":"127","/home/nullchilly/code/git/web101/src/helpers/tag.tsx":"128"},{"size":604,"mtime":1704375980888,"results":"129","hashOfConfig":"130"},{"size":185,"mtime":1701708757503,"results":"131","hashOfConfig":"130"},{"size":1250,"mtime":1701708757503,"results":"132","hashOfConfig":"130"},{"size":612,"mtime":1704537468060,"results":"133","hashOfConfig":"130"},{"size":714,"mtime":1704537468060,"results":"134","hashOfConfig":"130"},{"size":890,"mtime":1704204863260,"results":"135","hashOfConfig":"130"},{"size":6911,"mtime":1704649586031,"results":"136","hashOfConfig":"130"},{"size":173,"mtime":1701708757503,"results":"137","hashOfConfig":"130"},{"size":3420,"mtime":1704537468060,"results":"138","hashOfConfig":"130"},{"size":1405,"mtime":1701708757503,"results":"139","hashOfConfig":"130"},{"size":1078,"mtime":1701708757503,"results":"140","hashOfConfig":"130"},{"size":8825,"mtime":1704648422161,"results":"141","hashOfConfig":"130"},{"size":160,"mtime":1701708757503,"results":"142","hashOfConfig":"130"},{"size":177,"mtime":1701708757503,"results":"143","hashOfConfig":"130"},{"size":832,"mtime":1704204863260,"results":"144","hashOfConfig":"130"},{"size":794,"mtime":1704204863260,"results":"145","hashOfConfig":"130"},{"size":6295,"mtime":1704204863260,"results":"146","hashOfConfig":"130"},{"size":9811,"mtime":1701708757503,"results":"147","hashOfConfig":"130"},{"size":9534,"mtime":1701708757503,"results":"148","hashOfConfig":"130"},{"size":3721,"mtime":1701708757503,"results":"149","hashOfConfig":"130"},{"size":1070,"mtime":1701708757503,"results":"150","hashOfConfig":"130"},{"size":1164,"mtime":1701708757503,"results":"151","hashOfConfig":"130"},{"size":960,"mtime":1704538329430,"results":"152","hashOfConfig":"130"},{"size":1078,"mtime":1701708757503,"results":"153","hashOfConfig":"130"},{"size":4920,"mtime":1704378216607,"results":"154","hashOfConfig":"130"},{"size":761,"mtime":1704204863260,"results":"155","hashOfConfig":"130"},{"size":5444,"mtime":1704538329430,"results":"156","hashOfConfig":"130"},{"size":4256,"mtime":1704684763487,"results":"157","hashOfConfig":"130"},{"size":907,"mtime":1701708757503,"results":"158","hashOfConfig":"130"},{"size":358,"mtime":1701708757503,"results":"159","hashOfConfig":"130"},{"size":1868,"mtime":1704648422241,"results":"160","hashOfConfig":"130"},{"size":4716,"mtime":1704204863260,"results":"161","hashOfConfig":"130"},{"size":488,"mtime":1704537468140,"results":"162","hashOfConfig":"130"},{"size":917,"mtime":1704204863260,"results":"163","hashOfConfig":"130"},{"size":824,"mtime":1701708757503,"results":"164","hashOfConfig":"130"},{"size":5364,"mtime":1704684763487,"results":"165","hashOfConfig":"130"},{"size":1193,"mtime":1704204863260,"results":"166","hashOfConfig":"130"},{"size":2185,"mtime":1704538329440,"results":"167","hashOfConfig":"130"},{"size":7293,"mtime":1704650863691,"results":"168","hashOfConfig":"130"},{"size":1152,"mtime":1704204863260,"results":"169","hashOfConfig":"130"},{"size":5956,"mtime":1704204863260,"results":"170","hashOfConfig":"130"},{"size":4350,"mtime":1704537468150,"results":"171","hashOfConfig":"130"},{"size":332,"mtime":1701708757503,"results":"172","hashOfConfig":"130"},{"size":1217,"mtime":1701708757503,"results":"173","hashOfConfig":"130"},{"size":568,"mtime":1701708757503,"results":"174","hashOfConfig":"130"},{"size":2672,"mtime":1701708757503,"results":"175","hashOfConfig":"130"},{"size":6273,"mtime":1701708757503,"results":"176","hashOfConfig":"130"},{"size":3749,"mtime":1701708757503,"results":"177","hashOfConfig":"130"},{"size":3557,"mtime":1701708757503,"results":"178","hashOfConfig":"130"},{"size":1579,"mtime":1701708757503,"results":"179","hashOfConfig":"130"},{"size":3144,"mtime":1701708757503,"results":"180","hashOfConfig":"130"},{"size":3167,"mtime":1701708757503,"results":"181","hashOfConfig":"130"},{"size":2749,"mtime":1701708757503,"results":"182","hashOfConfig":"130"},{"size":816,"mtime":1701708757503,"results":"183","hashOfConfig":"130"},{"size":3031,"mtime":1704204863260,"results":"184","hashOfConfig":"130"},{"size":15493,"mtime":1701708757503,"results":"185","hashOfConfig":"130"},{"size":2009,"mtime":1701708757503,"results":"186","hashOfConfig":"130"},{"size":1263,"mtime":1701708757503,"results":"187","hashOfConfig":"130"},{"size":1542,"mtime":1701708757503,"results":"188","hashOfConfig":"130"},{"size":1624,"mtime":1704649586031,"results":"189","hashOfConfig":"130"},{"size":786,"mtime":1701708757503,"results":"190","hashOfConfig":"130"},{"size":1369,"mtime":1701708757503,"results":"191","hashOfConfig":"130"},{"size":1238,"mtime":1701708757503,"results":"192","hashOfConfig":"130"},{"size":1247,"mtime":1701708757503,"results":"193","hashOfConfig":"130"},{"size":859,"mtime":1701708757503,"results":"194","hashOfConfig":"130"},{"size":1330,"mtime":1701708757503,"results":"195","hashOfConfig":"130"},{"size":787,"mtime":1701708757503,"results":"196","hashOfConfig":"130"},{"size":975,"mtime":1701708757503,"results":"197","hashOfConfig":"130"},{"size":1082,"mtime":1701708757503,"results":"198","hashOfConfig":"130"},{"size":1446,"mtime":1701708757503,"results":"199","hashOfConfig":"130"},{"size":1095,"mtime":1704204863260,"results":"200","hashOfConfig":"130"},{"size":2090,"mtime":1701708757503,"results":"201","hashOfConfig":"130"},{"size":612,"mtime":1701708757503,"results":"202","hashOfConfig":"130"},{"size":1970,"mtime":1701708757503,"results":"203","hashOfConfig":"130"},{"size":2908,"mtime":1704204863260,"results":"204","hashOfConfig":"130"},{"size":6275,"mtime":1701708757503,"results":"205","hashOfConfig":"130"},{"size":7651,"mtime":1701708757503,"results":"206","hashOfConfig":"130"},{"size":38000,"mtime":1701708757503,"results":"207","hashOfConfig":"130"},{"size":35050,"mtime":1701708757503,"results":"208","hashOfConfig":"130"},{"size":24636,"mtime":1701708757503,"results":"209","hashOfConfig":"130"},{"size":3630,"mtime":1701708757503,"results":"210","hashOfConfig":"130"},{"size":1546,"mtime":1701708757503,"results":"211","hashOfConfig":"130"},{"size":416,"mtime":1701708757503,"results":"212","hashOfConfig":"130"},{"size":4535,"mtime":1701708757503,"results":"213","hashOfConfig":"130"},{"size":741,"mtime":1701708757503,"results":"214","hashOfConfig":"130"},{"size":12009,"mtime":1704684763487,"results":"215","hashOfConfig":"130"},{"size":3213,"mtime":1701708757503,"results":"216","hashOfConfig":"130"},{"size":2666,"mtime":1701708757503,"results":"217","hashOfConfig":"130"},{"size":1203,"mtime":1701708757503,"results":"218","hashOfConfig":"130"},{"size":914,"mtime":1701708757503,"results":"219","hashOfConfig":"130"},{"size":2646,"mtime":1701708757503,"results":"220","hashOfConfig":"130"},{"size":1817,"mtime":1701708757503,"results":"221","hashOfConfig":"130"},{"size":824,"mtime":1701708757503,"results":"222","hashOfConfig":"130"},{"size":2003,"mtime":1704651148911,"results":"223","hashOfConfig":"130"},{"size":1669,"mtime":1704204863260,"results":"224","hashOfConfig":"130"},{"size":2773,"mtime":1701708757503,"results":"225","hashOfConfig":"130"},{"size":716,"mtime":1701708757503,"results":"226","hashOfConfig":"130"},{"size":586,"mtime":1701708757503,"results":"227","hashOfConfig":"130"},{"size":1875,"mtime":1704538329440,"results":"228","hashOfConfig":"130"},{"size":5840,"mtime":1701708757503,"results":"229","hashOfConfig":"130"},{"size":9459,"mtime":1704684763487,"results":"230","hashOfConfig":"130"},{"size":13997,"mtime":1704684763487,"results":"231","hashOfConfig":"130"},{"size":1443,"mtime":1704204863260,"results":"232","hashOfConfig":"130"},{"size":4670,"mtime":1704204863260,"results":"233","hashOfConfig":"130"},{"size":1638,"mtime":1704204863260,"results":"234","hashOfConfig":"130"},{"size":173,"mtime":1701708757503,"results":"235","hashOfConfig":"130"},{"size":1926,"mtime":1701708757503,"results":"236","hashOfConfig":"130"},{"size":614,"mtime":1701708757503,"results":"237","hashOfConfig":"130"},{"size":770,"mtime":1704204863260,"results":"238","hashOfConfig":"130"},{"size":708,"mtime":1701708757503,"results":"239","hashOfConfig":"130"},{"size":619,"mtime":1704537468220,"results":"240","hashOfConfig":"130"},{"size":257,"mtime":1701708757503,"results":"241","hashOfConfig":"130"},{"size":351,"mtime":1701708757503,"results":"242","hashOfConfig":"130"},{"size":350,"mtime":1701708757503,"results":"243","hashOfConfig":"130"},{"size":662,"mtime":1704204863260,"results":"244","hashOfConfig":"130"},{"size":632,"mtime":1704537468110,"results":"245","hashOfConfig":"130"},{"size":151,"mtime":1704538329430,"results":"246","hashOfConfig":"130"},{"size":7366,"mtime":1704538930440,"results":"247","hashOfConfig":"130"},{"size":908,"mtime":1704538329440,"results":"248","hashOfConfig":"130"},{"size":1178,"mtime":1704648422201,"results":"249","hashOfConfig":"130"},{"size":804,"mtime":1704538329440,"results":"250","hashOfConfig":"130"},{"size":3695,"mtime":1704538329440,"results":"251","hashOfConfig":"130"},{"size":165,"mtime":1704538329440,"results":"252","hashOfConfig":"130"},{"size":6963,"mtime":1704648422241,"results":"253","hashOfConfig":"130"},{"size":150,"mtime":1704648422161,"results":"254","hashOfConfig":"130"},{"size":12961,"mtime":1704648422201,"results":"255","hashOfConfig":"130"},{"size":3609,"mtime":1704648422241,"results":"256","hashOfConfig":"130"},{"size":137,"mtime":1704648422241,"results":"257","hashOfConfig":"130"},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3plalo",{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279"},{"filePath":"280","messages":"281","suppressedMessages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","suppressedMessages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","suppressedMessages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","suppressedMessages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","suppressedMessages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295"},{"filePath":"296","messages":"297","suppressedMessages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","suppressedMessages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","suppressedMessages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305"},{"filePath":"306","messages":"307","suppressedMessages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309"},{"filePath":"310","messages":"311","suppressedMessages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","suppressedMessages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316"},{"filePath":"317","messages":"318","suppressedMessages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","suppressedMessages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","suppressedMessages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","suppressedMessages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","suppressedMessages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","suppressedMessages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","suppressedMessages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","suppressedMessages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","suppressedMessages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","suppressedMessages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","suppressedMessages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","suppressedMessages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","suppressedMessages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","suppressedMessages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","suppressedMessages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","suppressedMessages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","suppressedMessages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","suppressedMessages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371"},{"filePath":"372","messages":"373","suppressedMessages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","suppressedMessages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","suppressedMessages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381"},{"filePath":"382","messages":"383","suppressedMessages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","suppressedMessages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388"},{"filePath":"389","messages":"390","suppressedMessages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","suppressedMessages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","suppressedMessages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398"},{"filePath":"399","messages":"400","suppressedMessages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","suppressedMessages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","suppressedMessages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"408","messages":"409","suppressedMessages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","suppressedMessages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","suppressedMessages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"417","messages":"418","suppressedMessages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"420","messages":"421","suppressedMessages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"423","messages":"424","suppressedMessages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"426","messages":"427","suppressedMessages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","suppressedMessages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","suppressedMessages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"435","messages":"436","suppressedMessages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"438","messages":"439","suppressedMessages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"441","messages":"442","suppressedMessages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"444","messages":"445","suppressedMessages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"447","messages":"448","suppressedMessages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"450","messages":"451","suppressedMessages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"453","messages":"454","suppressedMessages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"456","messages":"457","suppressedMessages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"459","messages":"460","suppressedMessages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"462","messages":"463","suppressedMessages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"465","messages":"466","suppressedMessages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"468","messages":"469","suppressedMessages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"471","messages":"472","suppressedMessages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"474","messages":"475","suppressedMessages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"477","messages":"478","suppressedMessages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"480","messages":"481","suppressedMessages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"483","messages":"484","suppressedMessages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"486","messages":"487","suppressedMessages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"489","messages":"490","suppressedMessages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"492","messages":"493","suppressedMessages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"495","messages":"496","suppressedMessages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"498","messages":"499","suppressedMessages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"501","messages":"502","suppressedMessages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"504","messages":"505","suppressedMessages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"507","messages":"508","suppressedMessages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"510","messages":"511","suppressedMessages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"513","messages":"514","suppressedMessages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"516","messages":"517","suppressedMessages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"519","messages":"520","suppressedMessages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"522","messages":"523","suppressedMessages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"525","messages":"526","suppressedMessages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"528","messages":"529","suppressedMessages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"531","messages":"532","suppressedMessages":"533","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"534","messages":"535","suppressedMessages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"537","messages":"538","suppressedMessages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"540","messages":"541","suppressedMessages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"543","messages":"544","suppressedMessages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"546","messages":"547","suppressedMessages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"549","messages":"550","suppressedMessages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"552","messages":"553","suppressedMessages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"555","messages":"556","suppressedMessages":"557","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"558","messages":"559","suppressedMessages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"561","messages":"562","suppressedMessages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"564","messages":"565","suppressedMessages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"567"},{"filePath":"568","messages":"569","suppressedMessages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"571"},{"filePath":"572","messages":"573","suppressedMessages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575"},{"filePath":"576","messages":"577","suppressedMessages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"579"},{"filePath":"580","messages":"581","suppressedMessages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583"},{"filePath":"584","messages":"585","suppressedMessages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"587"},{"filePath":"588","messages":"589","suppressedMessages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"591","messages":"592","suppressedMessages":"593","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"594","messages":"595","suppressedMessages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"597","messages":"598","suppressedMessages":"599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"600","messages":"601","suppressedMessages":"602","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"603","messages":"604","suppressedMessages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"606","messages":"607","suppressedMessages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"609","messages":"610","suppressedMessages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"612","messages":"613","suppressedMessages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"615","messages":"616","suppressedMessages":"617","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"618","messages":"619","suppressedMessages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"621","messages":"622","suppressedMessages":"623","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"624","messages":"625","suppressedMessages":"626","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"627"},{"filePath":"628","messages":"629","suppressedMessages":"630","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"631","messages":"632","suppressedMessages":"633","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"634","messages":"635","suppressedMessages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"637","messages":"638","suppressedMessages":"639","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"640"},{"filePath":"641","messages":"642","suppressedMessages":"643","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"644","messages":"645","suppressedMessages":"646","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"647"},{"filePath":"648","messages":"649","suppressedMessages":"650","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"651","messages":"652","suppressedMessages":"653","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"654"},{"filePath":"655","messages":"656","suppressedMessages":"657","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"658","messages":"659","suppressedMessages":"660","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nullchilly/code/git/web101/src/app/computer/[slug]/page.tsx",[],[],"/home/nullchilly/code/git/web101/src/app/computer/page.tsx",[],[],"/home/nullchilly/code/git/web101/src/app/forget/page.tsx",[],[],"/home/nullchilly/code/git/web101/src/app/human/[slug]/page.tsx",[],[],"/home/nullchilly/code/git/web101/src/app/human/page.tsx",[],[],"/home/nullchilly/code/git/web101/src/app/layout.tsx",[],[],"/home/nullchilly/code/git/web101/src/app/login/page.tsx",["661"],[],"\"use client\";\nimport Link from \"next/link\";\nimport {useContext, useEffect, useState} from 'react';\nimport BlackQueen from \"@/components/icons/ChessPiece/BlackQueen\";\nimport { useRouter } from \"next/navigation\";\nimport {UserContext} from \"@/context/UserContext\";\n\nfunction Login() {\n\n  const [formData, setFormData] = useState({\n    \"user_name\": \"\",\n    \"password\": \"\"\n  });\n\n  const [havepw, sethavepw] = useState(true);\n  const [haveun, sethaveun] = useState(true);\n  const [check, setcheck] = useState(true);\n  const router = useRouter();\n  const {checkLogin} = useContext(UserContext);\n  \n  useEffect(() => {\n    if (localStorage.getItem('accessToken')) {\n      router.push('/profile');\n    }\n  },[])\n  \n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    let err = false;\n    if(formData['user_name'] == \"\") {\n      sethaveun(false);\n      err = true\n    }\n    else sethaveun(true);\n    if(formData['password'] == \"\") {\n      sethavepw(false);\n      err = true;\n    }\n    else sethavepw(true);\n    if(err) return;\n    try {\n      const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}` + \"/api/login\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n      if (response.ok) {\n        const data = await response.json();\n        const token = data.data.accessToken;\n        if (token) {\n          localStorage.setItem('accessToken', token);\n        }\n        setcheck(true);\n        if (checkLogin) {\n          await checkLogin();\n        }\n        router.push('/profile');\n      } else {\n        console.error('Login failed:', response.statusText);\n        setcheck(false);\n      }\n    } catch (error) {\n      console.error('An unexpected error occurred:', error);\n    }\n    \n  }\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  \n\n  return (\n    <div className=\"relative flex flex-col items-center justify-center min-h-screen overflow-hidden\">\n        <div className=\"w-full p-6 bg-white rounded-md shadow-xl lg:max-w-xl border\">\n        <div className=\"flex justify-center\">\n            <div className=\"text-4xl font-extrabold text-center text-gray-800 not-italic\">Next Chess</div>\n          <BlackQueen width={45} height={45} />\n        </div>\n        <form className=\"mt-4\" onSubmit={handleSubmit}>\n          <div className=\"mb-4\">\n            <label\n              htmlFor=\"username\"\n              className=\"block text-lg font-bold text-gray-700\"\n            >\n              Username\n            </label>\n            <input\n              type=\"username\"\n              name=\"user_name\"\n              onChange={handleChange}\n              className=\"block w-full px-2 py-2 mt-2 text-gray-700 bg-white border rounded-lg focus:border-gray-800 focus:ring-gray-300\"\n            />\n            {!haveun && (<p className=\"text-red-500 text-sm\">Enter your Username.</p>)}\n          </div>\n          <div className=\"mb-\">\n            <label\n              htmlFor=\"password\"\n              className=\"block text-lg font-bold text-gray-700\"\n            >\n              Password\n            </label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              onChange={handleChange}\n              className=\"block w-full px-2 py-2 mt-2 mb-2 text-gray-700 bg-white border rounded-lg focus:border-gray-800 focus:ring-gray-300\"\n            />\n            {!havepw && (<p className=\"text-red-500 text-sm\">Enter your Password.</p>)}\n            {!check && (<p className=\"text-red-500 text-sm\">UserName or Password is wrong.</p>)}\n          </div>\n          <Link\n            href=\"/forget\"\n            className=\"text-base text-blue-700 hover:underline font-semibold\"\n          >\n            Forget Password?\n          </Link>\n          <div className=\"mt-2\">\n                <button className=\"w-full px-4 py-2 font-bold text-white bg-gray-700 rounded-md hover:bg-gray-500\">\n                    Login\n                </button>\n          </div>\n        </form>\n        {/* <div className=\"relative flex items-center justify-center w-full mt-6 border border-t\">\n            <div className=\"absolute px-5 bg-white font-bold\">Or</div>\n        </div>\n        <div className=\"flex mt-6 gap-x-6\">\n            <button\n                type=\"button\"\n                className=\"transition ease-in-out delay-150 hover:-translate-y-1 hover:scale-110 hover:bg-slate-400 duration-300 flex items-center justify-center w-full p-2  border border-gray-800 rounded-lg\"\n            >\n                <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 32 32\"\n                    className=\"w-5 h-5 fill-current\"\n                >\n                    <path d=\"M16.318 13.714v5.484h9.078c-0.37 2.354-2.745 6.901-9.078 6.901-5.458 0-9.917-4.521-9.917-10.099s4.458-10.099 9.917-10.099c3.109 0 5.193 1.318 6.38 2.464l4.339-4.182c-2.786-2.599-6.396-4.182-10.719-4.182-8.844 0-16 7.151-16 16s7.156 16 16 16c9.234 0 15.365-6.49 15.365-15.635 0-1.052-0.115-1.854-0.255-2.651z\"></path>\n                </svg>\n            </button>\n            <button className=\"transition ease-in-out delay-150 hover:-translate-y-1 hover:scale-110 hover:bg-slate-400 duration-300 flex items-center justify-center w-full p-2  border border-gray-800 rounded-lg\">\n                <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 32 32\"\n                    className=\"w-5 h-5 fill-current\"\n                >\n                    <path d=\"M16 0.396c-8.839 0-16 7.167-16 16 0 7.073 4.584 13.068 10.937 15.183 0.803 0.151 1.093-0.344 1.093-0.772 0-0.38-0.009-1.385-0.015-2.719-4.453 0.964-5.391-2.151-5.391-2.151-0.729-1.844-1.781-2.339-1.781-2.339-1.448-0.989 0.115-0.968 0.115-0.968 1.604 0.109 2.448 1.645 2.448 1.645 1.427 2.448 3.744 1.74 4.661 1.328 0.14-1.031 0.557-1.74 1.011-2.135-3.552-0.401-7.287-1.776-7.287-7.907 0-1.751 0.62-3.177 1.645-4.297-0.177-0.401-0.719-2.031 0.141-4.235 0 0 1.339-0.427 4.4 1.641 1.281-0.355 2.641-0.532 4-0.541 1.36 0.009 2.719 0.187 4 0.541 3.043-2.068 4.381-1.641 4.381-1.641 0.859 2.204 0.317 3.833 0.161 4.235 1.015 1.12 1.635 2.547 1.635 4.297 0 6.145-3.74 7.5-7.296 7.891 0.556 0.479 1.077 1.464 1.077 2.959 0 2.14-0.020 3.864-0.020 4.385 0 0.416 0.28 0.916 1.104 0.755 6.4-2.093 10.979-8.093 10.979-15.156 0-8.833-7.161-16-16-16z\"></path>\n                </svg>\n            </button>\n        </div> */}\n\n        <p className=\"mt-4 text-base text-center text-gray-700\">\n          Don&apos;t have an account?{\" \"}\n          <Link\n            href=\"/signup\"\n            className=\"text-base text-blue-700 hover:underline font-semibold\"\n          >\n            Sign up\n          </Link>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","/home/nullchilly/code/git/web101/src/app/minimax/page.tsx",[],[],"/home/nullchilly/code/git/web101/src/app/page.tsx",[],[],"/home/nullchilly/code/git/web101/src/app/playground/socketio/page.tsx",[],[],"/home/nullchilly/code/git/web101/src/app/playground/websocket/page.tsx",[],[],"/home/nullchilly/code/git/web101/src/app/profile/page.tsx",["662","663"],[],"// @ts-check\n\"use client\";\nimport Link from \"next/link\";\nimport {\n  GameType,\n  Rating,\n  UserNetworkLink,\n  UserNetworkType,\n  UserProfile,\n} from \"@/helpers/types\";\nimport FastChessLogo from \"@/components/icons/FastChessLogo\";\nimport SlowChessLogo from \"@/components/icons/SlowChessLogo\";\nimport PuzzleLogo from \"@/components/icons/PuzzleLogo\";\nimport Star from \"@/components/icons/Star\";\nimport { UserContext } from \"@/context/UserContext\";\nimport { useContext, useEffect, useState } from \"react\";\n\nimport { List } from \"antd\";\nimport White from \"@/components/icons/wK\";\n\nconst ROUTES = [\n  { href: \"/profile\", text: \"Profile\" },\n  { href: \"/history\", text: \"History\" },\n  { href: \"/stats\", text: \"Stats\" },\n];\n\nconst fakeProfile: UserProfile = {\n  name: \"vipghn2003\",\n  avatar: \"https://www.chesskid.com/images/avatars/kids/100/kid-1162.png\",\n  userNetworkLinks: [\n    {\n      link: \"/profile\",\n      text: \"facebook\",\n      type: UserNetworkType.FACEBOOK,\n    },\n    {\n      link: \"/profile\",\n      text: \"profile\",\n      type: UserNetworkType.FACEBOOK,\n    },\n    {\n      link: \"/profile\",\n      text: \"profile\",\n      type: UserNetworkType.FACEBOOK,\n    },\n  ],\n  ratings: [\n    {\n      gameType: GameType.FAST,\n      rate: 800,\n      history: [\n        { x: \"\", y: 500 },\n        { x: \"\", y: 600 },\n        { x: \"\", y: 700 },\n        { x: \"\", y: 650 },\n        { x: \"\", y: 550 },\n        { x: \"\", y: 800 },\n        { x: \"\", y: 900 },\n      ],\n    },\n    {\n      gameType: GameType.SLOW,\n      rate: 800,\n      history: [\n        { x: \"\", y: 500 },\n        { x: \"\", y: 450 },\n        { x: \"\", y: 400 },\n        { x: \"\", y: 600 },\n      ],\n    },\n    {\n      gameType: GameType.PUZZLE,\n      rate: 1000,\n      history: [\n        { x: \"\", y: 500 },\n        { x: \"\", y: 600 },\n        { x: \"\", y: 700 },\n      ],\n    },\n    {\n      gameType: GameType.STARS,\n      rate: 0,\n      history: [\n        { x: \"\", y: 550 },\n        { x: \"\", y: 800 },\n        { x: \"\", y: 900 },\n      ],\n    },\n  ],\n};\n\nconst ProfileNavbar = () => {\n  return (\n    <nav className=\"bg-[#477330] p-4 rounded-lg shadow-md\">\n      <div className=\"items-center justify-center mx-auto sp\">\n        <div className=\"flex md:flex md:space-x-4 mx-auto\">\n          <div\n            key={0}\n            className=\"flex-grow text-center text-slate-100 font-mono p-4 bg-[#58943c] hover:bg-[#4f8536] transition-colors rounded-lg\"\n          >\n            <Link href=\"/profile\" className=\"\">\n              {\" \"}\n              Profile\n            </Link>\n          </div>\n\n          <div\n            key={0}\n            className=\"flex-grow text-center text-slate-100 font-mono p-4 hover:bg-[#4f8536] transition-colors rounded-lg\"\n          >\n            <Link href=\"/stat\" className=\"\">\n              {\" \"}\n              Stat\n            </Link>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nconst Profile = (avatar: string, name: string, links: UserNetworkLink[]) => {\n  return (\n    <div className=\"bg-[#477330] pt-4 pb-4 rounded-lg shadow-md w-full\">\n      <div className=\"grid grid-cols-2\">\n        <div className=\"grid grid-cols-3\">\n          <div className=\"object-cover h-full w-full flex items-center justify-center\">\n            <img\n              src={avatar}\n              alt=\"image description\"\n              className=\"shadow rounded-full max-w-full h-auto align-middle border-none\"\n            />\n          </div>\n          <div className=\"col-start-2 col-end-4 text-3xl text-slate-100 font-mono font-bold flex items-center\">\n            {name}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Rating = (userRatings: Rating[]) => {\n  return (\n    <div className=\"bg-[#477330] rounded-lg p-4\">\n      <div className=\"flex-grow text-slate-100 text-xl font-bold font-mono p-4\">\n        Ratings\n      </div>\n      <div className=\"bg-[#58943c] text-black p-4 rounded-lg grid grid-cols-4\">\n        <div className=\"flex flex-col items-center justify-center pr-20 pl-20\">\n          <FastChessLogo />\n        </div>\n        <div className=\"flex flex-col items-center justify-center pr-20 pl-20\">\n          <SlowChessLogo />\n        </div>\n        <div className=\"flex flex-col items-center justify-center pr-20 pl-20\">\n          <PuzzleLogo />\n        </div>\n        <div className=\"flex flex-col items-center justify-center pr-20 pl-20\">\n          <Star />\n        </div>\n        <div className=\"flex flex-col items-center justify-center text-slate-100 font-mono text-xl/2\">\n          Fast Chess\n        </div>\n        <div className=\"flex flex-col items-center justify-center text-slate-100 font-mono text-xl/2\">\n          Slow Chess\n        </div>\n        <div className=\"flex flex-col items-center justify-center text-slate-100 font-mono text-xl/2\">\n          Puzzle\n        </div>\n        <div className=\"flex flex-col items-center justify-center text-slate-100 font-mono text-xl/2\">\n          Stars\n        </div>\n        <div className=\"flex flex-col items-center justify-center text-slate-100 font-mono font-bold text-xl\">\n          {userRatings[0].rate}\n        </div>\n        <div className=\"flex flex-col items-center justify-center text-slate-100 font-mono font-bold text-xl\">\n          {userRatings[1].rate}\n        </div>\n        <div className=\"flex flex-col items-center justify-center text-slate-100 font-mono font-bold text-xl\">\n          {userRatings[2].rate}\n        </div>\n        <div className=\"flex flex-col items-center justify-center text-slate-100 font-mono font-bold text-xl\">\n          {userRatings[3].rate}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst SlowGame = () => {\n  return {};\n};\n\nconst Achievements = () => {\n  return {};\n};\n\nconst Trophies = () => {\n  return {};\n};\n\nconst GameHistory = () => {\n  return {};\n};\n\nconst StatOption = () => {\n  return {};\n};\n\nconst RatingHistory = () => {\n  return {};\n};\n\nconst Analyst = () => {\n  return {};\n};\n\nconst ProfilePage = () => {\n  const { name, accessToken } = useContext(UserContext);\n  const [gamesPlayed, setGamesPlayed] = useState([]);\n  useEffect(() => {\n    const savedToken = localStorage.getItem(\"accessToken\");\n    async function fetchUserGame() {\n      const response = await fetch(\n        `${process.env.NEXT_PUBLIC_BACKEND_URL}` + \"/api/game/history\",\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            accessToken: savedToken ?? accessToken,\n          },\n        }\n      );\n      const data = await response.json();\n      if (data?.code === 200) {\n        const allGamesSlug = data.data.games.map((game: any) => ({\n          slug: game.slug,\n          result: game.result,\n        }));\n        console.log(allGamesSlug);\n        setGamesPlayed(allGamesSlug);\n      }\n    }\n    if (savedToken || accessToken){\n      fetchUserGame();\n    }\n  }, []);\n  return (\n    <div className=\"flex flex-col\">\n      <div className=\"rw-full sm:w-full md:w-full p-4\">{ProfileNavbar()}</div>\n      <div className=\"rw-full sm:w-full md:w-full p-4\">\n        {Profile(\n          fakeProfile.avatar,\n          name ? name : \"Not Found\",\n          fakeProfile.userNetworkLinks\n        )}\n      </div>\n      <div className=\"rw-full sm:w-full md:w-full p-4\">\n        {Rating(fakeProfile.ratings)}\n      </div>\n      {gamesPlayed.length > 0 ? (\n        <div className=\"rw-full sm:w-full md:w-full p-4\">\n          <div className=\"bg-[#477330] rounded-lg p-4\">\n            <div className=\"flex-grow text-slate-100 text-xl font-bold font-mono p-4\">\n              Your match\n            </div>\n            <div className=\"bg-[#58943c] text-black p-4 rounded-lg \">\n              <List\n                itemLayout=\"horizontal\"\n                pagination={{\n                  responsive: true,\n                  align: 'center'\n                }}\n                dataSource={gamesPlayed.map((game: any) => ({\n                  title: \"Game \" + game.slug,\n                  slug: game.slug,\n                  description:\n                    game.result === 2\n                      ? \"You lose\"\n                      : game.result === 1\n                      ? \"You win\"\n                      : \"Draw match\",\n                }))}\n                renderItem={(item, index) => (\n                  <List.Item>\n                    <List.Item.Meta\n                      avatar={<White />}\n                      title={\n                        <Link href={`/computer/${item.slug}`} target=\"_blank\">\n                          <span className=\"font-bold\">{item.title}</span>\n                        </Link>\n                      }\n                      description={item.description}\n                    />\n                  </List.Item>\n                )}\n              />\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ProfilePage;\n","/home/nullchilly/code/git/web101/src/app/puzzle/page.tsx",[],[],"/home/nullchilly/code/git/web101/src/app/random/page.tsx",[],[],"/home/nullchilly/code/git/web101/src/app/settings/page.tsx",["664"],[],"'use client'\n\nimport {useContext, useEffect} from \"react\";\nimport {UserContext} from \"@/context/UserContext\";\nimport {useRouter} from \"next/navigation\";\nimport SettingsNavbar from \"@/components/Settings/NavbarSettings\";\nimport AccountSettings from \"@/components/Settings/AccountSettings\";\n\nconst Page = () => {\n\tconst {name } = useContext(UserContext);\n\tconst router = useRouter();\n\tuseEffect(() => {\n\t\tconst token = localStorage.getItem('accessToken');\n\t\tif (!token) {\n\t\t\trouter.push('/login');\n\t\t}\n\t},[])\n\treturn (\n\t\t<div className=\"flex flex-col\">\n\t\t\t<div className=\"rw-full sm:w-full md:w-full p-4\">\n\t\t\t\t{SettingsNavbar({key: true})}\n\t\t\t</div>\n\t\t\t<div className=\"rw-full sm:w-full md:w-full p-4\">\n\t\t\t\t<div className=\"bg-[#477330] rounded-lg p-4\">\n\t\t\t\t\t{AccountSettings()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n};\n\nexport default Page","/home/nullchilly/code/git/web101/src/app/settings/password/page.tsx",["665"],[],"'use client'\n\nimport {useContext, useEffect} from \"react\";\nimport {UserContext} from \"@/context/UserContext\";\nimport {useRouter} from \"next/navigation\";\nimport SettingsNavbar from \"@/components/Settings/NavbarSettings\";\nimport PasswordSettings from \"@/components/Settings/PasswordSettings\";\n\nconst Page = () => {\n\tconst router = useRouter();\n\tuseEffect(() => {\n\t\tconst token = localStorage.getItem('accessToken');\n\t\tif (!token) {\n\t\t\trouter.push('/login');\n\t\t}\n\t},[])\n\treturn (\n\t\t<div className=\"flex flex-col\">\n\t\t\t<div className=\"rw-full sm:w-full md:w-full p-4\">\n\t\t\t\t{SettingsNavbar({key: false})}\n\t\t\t</div>\n\t\t\t<div className=\"rw-full sm:w-full md:w-full p-4\">\n\t\t\t\t<div className=\"bg-[#477330] rounded-lg p-4\">\n\t\t\t\t\t{PasswordSettings()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n};\n\nexport default Page","/home/nullchilly/code/git/web101/src/app/signup/page.tsx",[],[],"/home/nullchilly/code/git/web101/src/app/stat/page.tsx",["666"],[],"// @ts-check\n\"use client\";\nimport { useState } from 'react';\nimport Link from \"next/link\";\nimport Image from 'next/image';\nimport {GameType, Rating, UserNetworkLink, UserNetworkType, UserProfile, DataPoint} from \"@/helpers/types\";\nimport \"chart.js/auto\";\nimport { Line } from \"react-chartjs-2\";\nimport 'chartjs-adapter-date-fns';\nimport { enUS } from 'date-fns/locale'; \n\nconst ROUTES = [\n    { href: '/profile', text: 'Profile' },\n    { href: '/history', text: 'History' },\n    { href: '/stats', text: 'Stats' },\n];\n\nconst fakeProfile: UserProfile = {\n    name: \"vipghn2003\",\n    avatar: \"https://www.chesskid.com/images/avatars/kids/100/kid-1162.png\",\n    userNetworkLinks: [\n        {\n            link: \"/profile\",\n            text: \"facebook\",\n            type: UserNetworkType.FACEBOOK\n        },\n        {\n            link: \"/profile\",\n            text: \"profile\",\n            type: UserNetworkType.FACEBOOK\n        },\n        {\n            link: \"/profile\",\n            text: \"profile\",\n            type: UserNetworkType.FACEBOOK\n        }\n    ],\n    ratings: [\n        {\n            gameType: GameType.FAST,\n            rate: 800,\n            history: [{\n                x: '2021-11-06 23:39:30',\n                y: 800\n            }, {\n                x: '2021-11-07 01:00:28',\n                y: 810\n            }, {\n                x: '2021-11-07 09:00:28',\n                y: 790\n            }, {\n                x: '2021-11-07 09:05:28',\n                y: 780\n            },\n            {\n                x: '2021-11-09 09:10:28',\n                y: 850\n            }]\n        },\n        {\n            gameType: GameType.SLOW,\n            rate: 800,\n            history: [{\n                x: '2021-10-04 23:39:30',\n                y: 1200\n            }, {\n                x: '2021-11-07 01:00:28',\n                y: 1100\n            }, {\n                x: '2021-12-07 09:00:28',\n                y: 1000\n            }, {\n                x: '2022-01-07 09:05:28',\n                y: 1050\n            },\n            {\n                x: '2022-01-09 09:10:28',\n                y: 1000\n            }]\n        },\n        {\n            gameType: GameType.PUZZLE,\n            rate: 1000,\n            history: [{\n                x: '2021-11-05 23:39:30',\n                y: 0\n            }, {\n                x: '2021-11-06 01:00:28',\n                y: 110\n            }, {\n                x: '2021-11-07 09:00:28',\n                y: 290\n            }, {\n                x: '2021-11-08 09:05:28',\n                y: 380\n            },\n            {\n                x: '2021-11-09 09:10:28',\n                y: 450\n            }]\n        },\n        {\n            gameType: GameType.STARS,\n            rate: 0,\n            history: [{\n                x: '2021-11-06 23:39:30',\n                y: 800\n            }, {\n                x: '2021-11-07 01:00:28',\n                y: 810\n            }, {\n                x: '2021-11-07 09:00:28',\n                y: 790\n            }, {\n                x: '2021-11-07 09:05:28',\n                y: 780\n            },\n            {\n                x: '2021-11-09 09:10:28',\n                y: 850\n            }]\n        }\n\n    ]\n}\n\nconst ProfileNavbar = () => {\n    return(\n        <nav className=\"bg-[#477330] p-4 rounded-lg shadow-md\">\n            <div className=\"items-center justify-center mx-auto sp\">\n                <div className=\"flex md:flex md:space-x-4 mx-auto\">\n\n                            <div key={0} className=\"flex-grow text-center text-slate-100 font-mono p-4 hover:bg-[#4f8536] transition-colors rounded-lg\">\n                                <Link href=\"/profile\" className=\"\"> Profile</Link>\n                            </div>\n\n                            <div key={0} className=\"flex-grow text-center text-slate-100 font-mono p-4 bg-[#58943c] hover:bg-[#4f8536] transition-colors rounded-lg\">\n                                <Link href=\"/stat\" className=\"\"> Stat</Link>\n                            </div>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nconst Profile = (avatar: string, name: string, links: UserNetworkLink[]) => {\n    return (\n        <div className=\"bg-[#477330] pt-4 pb-4 rounded-lg shadow-md w-full\">\n            <div className=\"grid grid-cols-2\">\n                <div className=\"grid grid-cols-3\">\n                    <div className=\"object-cover h-full w-full flex items-center justify-center\">\n                        <img src={avatar} alt=\"image description\" className=\"shadow rounded-full max-w-full h-auto align-middle border-none\"/>\n                    </div>\n                    <div className=\"col-start-2 col-end-4 text-3xl text-slate-100 font-mono font-bold flex items-center\">\n                        {name}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nconst RatingChart = (history: DataPoint[]) => {\n    return (\n        <div className=\"relative w-3/5 h-3/5\">\n            <Line \n                data={{\n                datasets: [\n                    { \n                    data: history,\n                    label: \"Ratings\",\n                    borderColor: '#2ECC71',  // Green border color\n                    backgroundColor: '#82E0AA',  // Light green background color\n                    fill: false\n                    }\n                ]\n                }}\n                options= {{\n                    plugins:{\n                        legend: {\n                            display: false,\n                        }\n                    },\n                    scales: {\n                        x: {\n                            grid:{\n                                color: '#FFFFFF',\n                                display: false\n                            },\n                            ticks:{\n                                color: '#FFFFFF',\n                                font: {\n                                    family: 'Helvetica Neue',\n                                    weight: 'bold',\n                                }\n                            },\n                            type: 'time',\n                            time: {\n                                unit: 'month'\n                            },\n                            adapters: { \n                                date: {\n                                  locale: enUS, \n                                },\n                            }, \n                        },\n                        y: {\n                            grid:{\n                                color: '#FFFFFF',\n                                display: true\n                            },\n                            ticks:{\n                                color: '#FFFFFF',\n                                font: {\n                                    family: 'Helvetica Neue',\n                                    weight: 'bold',\n                                },\n                            },\n                        }\n                    }\n                }}\n            />\n\n        </div>\n    )\n}\n\n\nconst RatingHistory = (userRatings: Rating[]) => {\n    const [isOpen, setIsOpen] = useState(false);\n  \n    const toggleDropdown = () => {\n      setIsOpen(!isOpen);\n    };\n\n    const [selectedOption, setSelectedOption] = useState(0);\n\n    const handleOptionClick = (option: number) => {\n        setSelectedOption(option);\n        setIsOpen(false);\n      };\n\n    const ChessType = ['Fast Chess', 'Slow Chess', 'Puzzle'];\n\n    return (\n        <div className=\"rw-full max-h-screen max-w-screen  p-4\">\n            <div className=\"relative inline-block\">\n                <button\n                className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center\"\n                onClick={toggleDropdown}\n                >\n                <span>{ChessType[selectedOption]}</span>\n                <svg\n                    className=\"fill-current h-4 w-4 ml-2\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 20 20\"\n                >\n                    <path d=\"M10 12.18l-6.36-6.36a1.5 1.5 0 1 1 2.12-2.12L10 7.94l4.24-4.24a1.5 1.5 0 1 1 2.12 2.12L12.12 10l4.24 4.24a1.5 1.5 0 0 1-2.12 2.12L10 12.18z\" />\n                </svg>\n                </button>\n                {isOpen && (\n                <div className=\"absolute right-0 mt-2 w-48 bg-white border rounded shadow-lg z-40\">\n                    <ul>\n                    <li className=\"py-2 px-4 hover:bg-gray-100 font-bold\" onClick={() => handleOptionClick(0)}>Fast Chess</li>\n                    <li className=\"py-2 px-4 hover:bg-gray-100 font-bold\" onClick={() => handleOptionClick(1)}>Slow Chess</li>\n                    <li className=\"py-2 px-4 hover:bg-gray-100 font-bold\" onClick={() => handleOptionClick(2)}>Puzzle</li>\n                    </ul>\n                </div>\n                )}\n            </div>\n            <div className=\"p-4\">\n                {RatingChart(fakeProfile.ratings[selectedOption].history)}\n            </div>\n        </div>\n    )\n}\n\n\nconst SlowGame = () => {\n    return({\n\n    })\n}\n\nconst Achievements = () => {\n    return({\n\n    })\n}\n\nconst Trophies = () => {\n    return ({\n\n    })\n}\n\nconst GameHistory = () => {\n    return({\n\n    })\n}\n\nconst StatOption = () => {\n    return({\n\n    })\n}\n\nconst Analyst = () => {\n    return({\n\n    })\n}\n\nconst ProfilePage = () => {\n    return (\n        <div className=\"flex flex-col\">\n            <div className=\"rw-full sm:w-full md:w-full p-4\">\n                {ProfileNavbar()}\n            </div>\n            <div className=\"rw-full sm:w-full md:w-full p-4\">\n                {Profile( fakeProfile.avatar, fakeProfile.name, fakeProfile.userNetworkLinks)}\n            </div>\n            {RatingHistory(fakeProfile.ratings)}\n        </div>\n    )\n};\n\n\n\nexport default ProfilePage","/home/nullchilly/code/git/web101/src/app/videos/fakeData.ts",[],[],"/home/nullchilly/code/git/web101/src/app/videos/page.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/Card/BotSelector.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/Card/PlayerCard.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/Card/PlayerInfoCard.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/Card/PrepareCard.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/ChessGame/ChessGame.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/Controls/Controls.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/Controls/ControlsPuzzle.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/HumanChessGame/HumanChessGame.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/Modal/LoadingModal.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/Modal/ModalContainer.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/Modal/ModalEndGame.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/Modal/ModalPlayBot.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/Modal/ModalPlayHuman.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/MoveList/MoveItem.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/MoveList/MoveList.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/Navbar/Navbar.tsx",["667"],[],"\"use client\";\nimport { useRouter } from \"next/navigation\";\nimport React, { useContext } from \"react\";\n\nimport StockChess from \"@/components/icons/StockChess\";\nimport ChessBoard from \"@/components/icons/ChessBoard\";\nimport Puzzle from \"@/components/icons/Puzzle\";\nimport ChessBot from \"@/components/icons/ChessBot\";\nimport Human from \"@/components/icons/Human\";\nimport Duel from \"@/components/icons/Duel\";\nimport Video from \"@/components/icons/Video\";\nimport Learn from \"@/components/icons/Learn\";\nimport { Menu } from \"antd\";\nimport type { MenuProps } from \"antd\";\nimport Link from \"next/link\";\nimport ModalPlayBot from \"../Modal/ModalPlayBot\";\nimport { SettingOutlined } from \"@ant-design/icons\";\nimport { UserContext } from \"@/context/UserContext\";\nimport ModalPlayHuman from \"../Modal/ModalPlayHuman\";\nimport SubMenu from \"antd/lib/menu/SubMenu\";\nimport Admin from \"@/components/icons/Admin\";\nimport \"./styles.css\"\n\ntype MenuItem = Required<MenuProps>[\"items\"][number];\n\nconst avatar = \"https://www.chesskid.com/images/avatars/kids/100/kid-1162.png\";\n\nfunction getItem(\n  label: React.ReactNode,\n  key: React.Key,\n  icon?: React.ReactNode,\n  children?: MenuItem[],\n  type?: \"group\"\n): MenuItem {\n  return {\n    key,\n    icon,\n    children,\n    label,\n    type,\n  } as MenuItem;\n}\n\nconst Navbar: React.FC = () => {\n  const [isModalPlayBotOpen, setIsModalPlayBotOpen] = React.useState(false);\n  const [isModalPlayHumanOpen, setIsModalPlayHumanOpen] = React.useState(false);\n  const router = useRouter();\n  const { name, rate, accessToken, isAdmin } = useContext(UserContext);\n  \n  const showModal = () => {\n    setIsModalPlayBotOpen(true);\n  };\n\n  const showHumanModal = () => {\n    setIsModalPlayHumanOpen(true);\n  };\n\n  const onClickMenuDrawer: MenuProps[\"onClick\"] = (e) => {\n    let href = e.keyPath[0]; // WARNING: This's hacky...\n    if (href === \"/computer\") {\n      showModal();\n    } else if (href === \"/human\") {\n      if (!accessToken) router.push(\"/login\");\n      else showHumanModal();\n    } else {\n      router.push(href);\n    }\n  };\n\n  const onClickAvatar = () => {\n    const savedToken = localStorage.getItem(\"accessToken\");\n    if (!accessToken || !savedToken) router.push(\"/login\");\n    else router.push(\"/profile\");\n  };\n\n  return (\n    <>\n      <div\n        className=\"bg-[#477330] px-4 py-4 grow text-center\"\n        style={{ maxWidth: \"272px\", minWidth: \"268px\" }}\n      >\n        <Link href=\"/\" color={'#f1f3f9'}>\n          <StockChess />\n        </Link>\n        <div className=\"object-cover p-6 w-full flex items-center justify-center\">\n          <div>\n            <button onClick={onClickAvatar}>\n              <img\n                src={avatar}\n                alt=\"image description\"\n                className=\"shadow rounded-full max-w-full h-auto border-4 border-[#518538]\"\n              />\n            </button>\n          </div>\n          <Link href={\"/settings\"} >\n            <SettingOutlined\n              style={{ fontSize: \"40px\", color: \"#f1f1f1\" }}\n              className=\"pl-5\"\n            />\n          </Link>\n        </div>\n        <div className=\"pb-6\">\n          <div className=\"object-cover max-w-full flex items-center justify-center bg-[#518538] rounded-3xl shadow-md h-auto m-1\">\n            <div>\n              <button onClick={onClickAvatar}>\n                <div className=\"text-3xl text-slate-100 font-mono font-bold flex items-center pt-3\">\n                  {name ? name : \"Guest\"}\n                </div>\n                <div className=\"text-l text-slate-100 font-mono flex items-center pb-3 pt-0.5\">\n                  Rate: {rate ? rate : \"xxx\"}\n                </div>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div>\n          <Menu\n            onClick={onClickMenuDrawer}\n            mode=\"inline\"\n            // items={items}\n            className=\"bg-transparent text-white font-['Albula'] text-lg\"\n          >\n            <SubMenu title={\"Play\"} icon={<ChessBoard />}>\n              <Menu.Item key=\"/human\" icon={<Human />}>\n                <Link href=\"/\" color={'#f1f3f9'}> Play vs Human </Link>\n              </Menu.Item>\n              <Menu.Item key=\"/computer\" icon={<ChessBot />}>\n                <Link href=\"/\"> Play vs Bot </Link>\n              </Menu.Item>\n            </SubMenu>\n            <SubMenu title={\"Puzzle\"} icon={<Puzzle />}>\n              <Menu.Item key=\"/puzzle\" icon={<Puzzle />}>\n                <Link href=\"/puzzle\"> Play Puzzle </Link>\n              </Menu.Item>\n              <Menu.Item key=\"/puzzle-duel\" icon={<Duel />}>\n                <Link href=\"/puzzle-duel\"> Puzzle Duel </Link>\n              </Menu.Item>\n            </SubMenu>\n            <SubMenu title={\"Learn\"} icon={<Learn />}>\n              <Menu.Item key=\"/videos\" icon={<Video />}>\n                <Link href=\"/videos\"> Videos </Link>\n              </Menu.Item>\n            </SubMenu>\n            {\n              isAdmin &&\n              <Menu.Item key=\"/admin\" icon={<Admin/>}>\n                <Link href=\"/admin\"> Admin </Link>\n              </Menu.Item>\n            }\n          </Menu>\n        </div>\n      </div>\n      <ModalPlayBot\n        isOpen={isModalPlayBotOpen}\n        setOpen={setIsModalPlayBotOpen}\n      />\n      <ModalPlayHuman\n        isOpen={isModalPlayHumanOpen}\n        setOpen={setIsModalPlayHumanOpen}\n      />\n    </>\n  );\n};\n\nexport default Navbar;\n","/home/nullchilly/code/git/web101/src/components/PlayerTimer/PlayerTimer.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/PuzzleGame/PuzzleGame.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/Settings/AccountSettings.tsx",["668","669","670"],[],"import React, {useContext, useEffect, useState} from \"react\";\nimport {UserContext} from \"@/context/UserContext\";\nimport {useRouter} from \"next/navigation\";\nimport {Button, ConfigProvider, DatePicker, Flex, Form, Input, Select, Spin} from \"antd\";\nimport \"./styles.css\";\nimport dayjs from \"dayjs\";\n\nconst avatar = \"https://www.chesskid.com/images/avatars/kids/100/kid-1162.png\";\n\nconst AccountSettings = () => {\n\tconst {name, dateOfBirth, gender, email, checkLogin, isLoading, accessToken} = useContext(UserContext);\n\tconst router = useRouter();\n\tconst [form] = Form.useForm()\n\tconst [isUpdating, setIsUpdating] = useState(false);\n\tconst [isUpdate, setIsUpdate] = useState(false)\n\n\tconst handleSubmitAccount = () => {\n\t\tform\n\t\t\t.validateFields()\n\t\t\t.then((values) => {\n\t\t\t\tsetIsUpdating(true);\n\t\t\t\tconst raw = JSON.stringify({\n\t\t\t\t\t...values,\n\t\t\t\t\tdateOfBirth: values.dateOfBirth.format(\"YYYY-MM-DD\")\n\t\t\t\t});\n\t\t\t\tfetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}` + \"/api/profile\", {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t'accessToken': accessToken,\n\t\t\t\t\t},\n\t\t\t\t\tbody: raw,\n\t\t\t\t}).then((response) => {\n\t\t\t\t\tif (response.ok) {\n\t\t\t\t\t\tcheckLogin();\n\t\t\t\t\t}\n\t\t\t\t}).finally(() => {\n\t\t\t\t\tsetIsUpdating(false);\n\t\t\t\t});\n\t\t\t})\n\t}\n\t\n\tconst logout = () => {\n\t\tlocalStorage.removeItem('accessToken');\n\t\tcheckLogin();\n\t\trouter.push('/login')\n\t}\n\t\n\tconst getInitValue = () => {\n\t\tsetIsUpdating(true);\n\t\tform.setFieldsValue({\n\t\t\tname: name,\n\t\t\tdateOfBirth: dayjs(dateOfBirth ? dateOfBirth : \"\"),\n\t\t\tgender: gender,\n\t\t\temail: email,\n\t\t})\n\t\tsetIsUpdating(false);\n\t}\n\t\n\tuseEffect(() => {\n\t\tif (!localStorage.getItem('accessToken')) {\n\t\t\trouter.push('/login');\n\t\t}\n\t}, []);\n\t\n\tuseEffect(() => {\n\t\tgetInitValue();\n\t}, [isLoading]);\n\t\n\treturn (\n\t\t<div className=\"bg-[#477330] pt-4 pb-4 rounded-lg shadow-md w-full row-auto\">\n\t\t\t<div className=\"grid\">\n\t\t\t\t<div className=\"object-cover h-full w-full flex items-center justify-end\">\n\t\t\t\t\t<img src={avatar} alt=\"image description\" className=\"shadow rounded-full max-w-full h-auto align-middle border-none\"/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-start-2 col-end-4 text-6xl text-slate-100 font-mono font-bold flex items-center pl-7\">\n\t\t\t\t\tAccount\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"grid grid-cols-4 pt-10\">\n\t\t\t\t\t<div className=\"col-start-2 col-end-4 text-6xl text-slate-100 font-mono font-bold flex items-center pl-7\">\n\t\t\t\t\t\t<Form\n\t\t\t\t\t\t\tlayout={'vertical'}\n\t\t\t\t\t\t\tform={form}\n\t\t\t\t\t\t\tinitialValues={{name: name, dateOfBirth: dayjs(), gender: gender, email: email}}\n\t\t\t\t\t\t\tstyle={{ maxWidth: 1000, width: 500 }}\n\t\t\t\t\t\t\tonFinish={handleSubmitAccount}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Spin spinning={isLoading || isUpdating}>\n\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t\t<p className=\"col-start-2 col-end-4 text-3xl text-slate-100 font-mono font-bold flex items-center pl-5\">\n\t\t\t\t\t\t\t\t\t\t\tName\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tname={\"name\"}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\tclassName={`bg-[#385c26] text-slate-100 p-4 rounded-lg grid grid-cols-4 text-2xl border-4 border-transparent hover:border-[#6ab148] focus:border-[#6ab148] `}\n\t\t\t\t\t\t\t\t\t\tdisabled={!isUpdate}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t\t<p className=\"col-start-2 col-end-4 text-3xl text-slate-100 font-mono font-bold flex items-center pl-5\">\n\t\t\t\t\t\t\t\t\t\t\tDate of Birth\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tname={\"dateOfBirth\"}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\tformat=\"YYYY-MM-DD\"\n\t\t\t\t\t\t\t\t\t\tclassName={`bg-[#385c26] p-4 rounded-lg grid grid-cols-4 text-2xl border-4 border-transparent hover:border-[#6ab148] focus:border-[#6ab148]`}\n\t\t\t\t\t\t\t\t\t\tdisabled={!isUpdate}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t<ConfigProvider\n\t\t\t\t\t\t\t\t\ttheme={{\n\t\t\t\t\t\t\t\t\t\tcomponents: {\n\t\t\t\t\t\t\t\t\t\t\tSelect: {\n\t\t\t\t\t\t\t\t\t\t\t\toptionSelectedBg: '#6ab148',\n\t\t\t\t\t\t\t\t\t\t\t\tcolorPrimary: '#6ab148',\n\t\t\t\t\t\t\t\t\t\t\t\toptionSelectedColor: '#000000',\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"col-start-2 col-end-4 text-3xl text-slate-100 font-mono font-bold flex items-center pl-5\">\n\t\t\t\t\t\t\t\t\t\t\t\tGender\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tname={\"gender\"}\n\t\t\t\t\t\t\t\t\t\tclassName={`pb-4`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\tpopupClassName={`border-4 bg-[#385c26] rounded-lg border-transparent font-bold`}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={!isUpdate}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Select.Option value=\"male\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={`text-2xl text-slate-100 font-mono font-bold flex`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tMale\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</Select.Option>\n\t\t\t\t\t\t\t\t\t\t\t<Select.Option value=\"female\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={`text-2xl text-slate-100 font-mono font-bold flex`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tFemale\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</Select.Option>\n\t\t\t\t\t\t\t\t\t\t\t<Select.Option value=\"Other\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={`text-2xl text-slate-100 font-mono font-bold flex`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\tOther\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</Select.Option>\n\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t</ConfigProvider>\n\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t\t<p className=\"col-start-2 col-end-4 text-3xl text-slate-100 font-mono font-bold flex items-center pl-5 pt-2\">\n\t\t\t\t\t\t\t\t\t\t\tEmail\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tname={\"email\"}\n\t\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: 'email',\n\t\t\t\t\t\t\t\t\t\t\tmessage: 'The input is not valid E-mail!',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tclassName={`bg-[#385c26] text-slate-100 p-4 rounded-lg grid grid-cols-4 text-2xl border-4 border-transparent hover:border-[#6ab148] focus:border-[#6ab148] `}\n\t\t\t\t\t\t\t\t\t\tdisabled={!isUpdate}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t</Spin>\n\t\t\t\t\t\t\t<Flex gap=\"small\" className={`grid grid-cols-2 mt-5`}>\n\t\t\t\t\t\t\t\t{isUpdate ?\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tclassName={`bg-[#e8822c] flex items-center p-7 hover:bg-[#f59543] border-0 w-fit`}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tsetIsUpdate(false);\n\t\t\t\t\t\t\t\t\t\t\thandleSubmitAccount();\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<p className=\"col-start-2 col-end-4 text-3xl text-slate-100 font-mono font-bold flex text-center\">\n\t\t\t\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tsetIsUpdate(true);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tclassName={`bg-[#e8822c] flex items-center p-7 hover:bg-[#f59543] border-0  w-fit`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<p className=\"col-start-2 col-end-4 text-3xl text-slate-100 font-mono font-bold flex text-center\">\n\t\t\t\t\t\t\t\t\t\t\tChange Profile\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<div className={`place-self-end`}>\n\t\t\t\t\t\t\t\t\t{!isUpdate ?\n\t\t\t\t\t\t\t\t\t\t<Button type=\"text\" className={`bg-transparent flex items-center p-7`} onClick={logout}>\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"col-start-2 col-end-4 text-3xl text-slate-100 font-mono font-bold flex text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={`bg-transparent flex items-center p-7`}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetIsUpdate(false);\n\t\t\t\t\t\t\t\t\t\t\t\tgetInitValue();\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"col-start-2 col-end-4 text-3xl text-slate-100 font-mono font-bold flex text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default AccountSettings;","/home/nullchilly/code/git/web101/src/components/Settings/NavbarSettings.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/Settings/PasswordSettings.tsx",["671","672"],[],"import {Alert, Button, Form, Input, Spin} from \"antd\";\nimport React, {useContext, useEffect, useState} from \"react\";\nimport {UserContext} from \"@/context/UserContext\";\nimport {useRouter} from \"next/navigation\";\nimport \"./styles.css\"\n\nconst avatar = \"https://www.chesskid.com/images/avatars/kids/100/kid-1162.png\";\n\nconst PasswordSettings = () => {\n\tconst [form] = Form.useForm()\n\tconst [isUpdating, setIsUpdating] = useState(false);\n\tconst [error, setError] = useState(false);\n\tconst {accessToken} = useContext(UserContext);\n\tconst router = useRouter();\n\tconst regex = new RegExp(/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/);\n\n\tconst handleChangePassword = () => {\n\t\tform\n\t\t\t.validateFields()\n\t\t\t.then((values) => {\n\t\t\t\tsetIsUpdating(true);\n\t\t\t\tfetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}` + \"/api/password\", {\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t'accessToken': accessToken,\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify(values)\n\t\t\t\t}).then((response) => {\n\t\t\t\t\tif (!response.ok) {\n\t\t\t\t\t\tsetError(true)\n\t\t\t\t\t} else {\n\t\t\t\t\t\trouter.push('/profile');\n\t\t\t\t\t}\n\t\t\t\t}).finally(() => {\n\t\t\t\t\tsetIsUpdating(false);\n\t\t\t\t})\n\t\t\t})\n\t}\n\t\n\tconst onCloseError = () => {\n\t\tsetError(false);\n\t}\n\t\n\tuseEffect(() => {\n\t\tif (!localStorage.getItem('accessToken')) {\n\t\t\trouter.push('/login');\n\t\t}\n\t}, []);\n\t\n\treturn (\n\t\t<div className=\"bg-[#477330] pt-4 pb-4 rounded-lg shadow-md w-full row-auto\">\n\t\t\t<div className=\"grid\">\n\t\t\t\t<div className=\"object-cover h-full w-full flex items-center justify-end\">\n\t\t\t\t\t<img src={avatar} alt=\"image description\" className=\"shadow rounded-full max-w-full h-auto align-middle border-none\"/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-start-2 col-end-4 text-6xl text-slate-100 font-mono font-bold flex items-center pl-7\">\n\t\t\t\t\tAccount\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"grid grid-cols-4 pt-10\">\n\t\t\t\t<div className=\"col-start-2 col-end-4 text-6xl text-slate-100 font-mono font-bold flex items-center pl-7\">\n\t\t\t\t\t<Form\n\t\t\t\t\t\tlayout={'vertical'}\n\t\t\t\t\t\tform={form}\n\t\t\t\t\t\tstyle={{ maxWidth: 1000, width: 500 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Spin spinning={isUpdating}>\n\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t<p className=\"col-start-2 col-end-4 text-3xl text-slate-100 font-mono font-bold flex items-center pl-5\">\n\t\t\t\t\t\t\t\t\t\tOld Password\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tname={\"oldPassword\"}\n\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t() => ({\n\t\t\t\t\t\t\t\t\t\tvalidator(_, value) {\n\t\t\t\t\t\t\t\t\t\t\tif (regex.test(value)) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn Promise.reject(new Error('Please input your old password!'));\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\treturn Promise.reject(new Error('Minimum eight characters, at least one letter and one number'));\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tclassName={`bg-[#385c26] text-slate-100 p-4 rounded-lg grid grid-cols-4 text-2xl border-4 border-transparent hover:border-[#6ab148] focus:border-[#6ab148] `}\n\t\t\t\t\t\t\t\t\ttype={'password'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t<p className=\"col-start-2 col-end-4 text-3xl text-slate-100 font-mono font-bold flex items-center pl-5\">\n\t\t\t\t\t\t\t\t\t\tNew Password\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tname={\"newPassword\"}\n\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t({getFieldValue}) => ({\n\t\t\t\t\t\t\t\t\t\tvalidator(_, value) {\n\t\t\t\t\t\t\t\t\t\t\tif (getFieldValue('oldPassword') === value) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn Promise.reject(new Error('New password cannot be the same as your old password!'));\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn Promise.reject(new Error('Please input your old password!'));\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif (regex.test(value)) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\treturn Promise.reject(new Error('Minimum eight characters, at least one letter and one number'));\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tclassName={`bg-[#385c26] text-slate-100 p-4 rounded-lg grid grid-cols-4 text-2xl border-4 border-transparent hover:border-[#6ab148] focus:border-[#6ab148] `}\n\t\t\t\t\t\t\t\t\ttype={'password'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t<p className=\"col-start-2 col-end-4 text-3xl text-slate-100 font-mono font-bold flex items-center pl-5\">\n\t\t\t\t\t\t\t\t\t\tConfirm Password\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tname={\"confirm\"}\n\t\t\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t\t\t({ getFieldValue }) => ({\n\t\t\t\t\t\t\t\t\t\tvalidator(_, value) {\n\t\t\t\t\t\t\t\t\t\t\tif (getFieldValue('newPassword') === value) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn Promise.reject(new Error('Please input your old password!'));\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\treturn Promise.reject(new Error('The new password that you entered do not match!'));\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tclassName={`bg-[#385c26] text-slate-100 p-4 rounded-lg grid grid-cols-4 text-2xl border-4 border-transparent hover:border-[#6ab148] focus:border-[#6ab148] `}\n\t\t\t\t\t\t\t\t\ttype={'password'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t</Spin>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName={`bg-[#e8822c] flex items-center p-7 hover:bg-[#f59543] border-0 w-fit`}\n\t\t\t\t\t\t\tonClick={handleChangePassword}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<p className=\"col-start-2 col-end-4 text-3xl text-slate-100 font-mono font-bold flex text-center\">\n\t\t\t\t\t\t\t\tChange Password\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\terror &&\n\t\t\t\t\t\t\t<div className={`pt-4`}>\n\t\t\t\t\t\t\t\t<Alert\n\t\t\t\t\t\t\t\t\tmessage=\"Oops?! We noticed the following errors in your form:\"\n\t\t\t\t\t\t\t\t\ttype=\"error\"\n                  description={\n\t\t\t\t\t\t\t\t\t\t<code>\n\t\t\t\t\t\t\t\t\t\t\t- Your password is too short. Please enter in at least 6 characters.\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t- Password is too easy!\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t- Passwords do not match. Please try again.\n\t\t\t\t\t\t\t\t\t\t</code>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonClose={onCloseError}\n\t\t\t\t\t\t\t\t\tclosable\n\t\t\t\t\t\t\t\t\tclassName={`bg-[#515865]`}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t)\n\t\n}\n\nexport default PasswordSettings;","/home/nullchilly/code/git/web101/src/components/Tabs/Human.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/ThemeProvider.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/Videos/VideoComponent.tsx",["673","674"],[],"import { getYoutubeThumbnail } from \"@/helpers/images\";\nimport { VideosProps } from \"@/helpers/types\";\nimport Link from \"next/link\";\n\nconst VideoComponent = ({\n  url,\n  author,\n  date,\n  summary,\n  length,\n  tag,\n  style,\n}: VideosProps) => {\n  return (\n    <div>\n      <div className=\"bg-white w-72 h-80 p-4 rounded-lg shadow-lg\">\n        <div className=\"relative\">\n          <Link href={url}>\n            <img\n              src={getYoutubeThumbnail(url)}\n              className=\"w-full h-full rounded-lg\"\n            ></img>\n          </Link>\n          <span className=\"absolute top-2 right-2 bg-gray-800 text-white px-2 py-1 rounded-full text-xs\">\n            {length}\n          </span>\n        </div>\n        <div className=\"mt-4\">\n          <div className=\"flex items-center\">\n            <h2 className=\"text-red-500 font-bold\">{author}</h2>\n            <p className=\"text-gray-600 mx-2\">|</p>\n            <p className=\"text-gray-600\">{date}</p>\n            <p className=\"text-gray-600 mx-2\">|</p>\n            <p className=\"text-gray-600\">{length}</p>\n          </div>\n          <p className=\"mt-2 text-gray-400 truncate\">{summary}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { VideoComponent };\n","/home/nullchilly/code/git/web101/src/components/Videos/VideoGrid.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/BlackMove.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/BotIcon/Cat.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/BotIcon/Elephant.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/BotIcon/Monkey.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/BotIcon/Null.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/BotIcon/Owl.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/BotIcon/Penguin.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/BotIcon/Shark.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/BotIcon/index.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/Checkmate.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/ChessBoard.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/ChessBot.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/ChessPiece/BlackBishop.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/ChessPiece/BlackKing.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/ChessPiece/BlackKnight.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/ChessPiece/BlackPawn.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/ChessPiece/BlackQueen.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/ChessPiece/BlackRook.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/ChessPiece/WhiteBishop.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/ChessPiece/WhiteKing.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/ChessPiece/WhiteKnight.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/ChessPiece/WhitePawn.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/ChessPiece/WhiteQueen.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/ChessPiece/WhiteRook.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/ChessPiece/index.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/Crown.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/Duel.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/Facebook.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/FastChessLogo.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/Handshake.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/Human.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/Learn.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/PlayBotPoster.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/PlayHumanPoster.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/PlayPuzzlePoster.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/Puzzle.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/PuzzleLogo.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/SkipIcon.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/SlowChessLogo.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/Star.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/StockChess.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/Video.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/WhiteMove.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/bK.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/wK.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/icons/wbK.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/ui/button.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/ui/input.tsx",[],[],"/home/nullchilly/code/git/web101/src/context/UserContext.tsx",[],[],"/home/nullchilly/code/git/web101/src/helpers/chess.ts",[],[],"/home/nullchilly/code/git/web101/src/helpers/chessEvaluations.ts",[],[],"/home/nullchilly/code/git/web101/src/helpers/images.ts",[],[],"/home/nullchilly/code/git/web101/src/helpers/string.ts",[],[],"/home/nullchilly/code/git/web101/src/helpers/types.ts",[],[],"/home/nullchilly/code/git/web101/src/hooks/useChess.tsx",["675"],[],"import { useState } from \"react\";\nimport React from \"react\";\nimport { Chess, Move, Square } from \"chess.js\";\nimport { evaluateBoard } from \"@/helpers/chess\";\nimport { ShortMove } from \"@/types\";\n\nexport type ChessType = \"random\" | \"computer\" | \"minimax\";\n\nenum ConnectionStatus {\n  Open = \"open\",\n  Connecting = \"connecting\",\n  Disconnected = \"disconnected\",\n}\n\nconst useChess = (type: ChessType) => {\n  // Start of socket\n  const [socket, setSocket] = React.useState<WebSocket | null>(null);\n  const [connectionStatus, setConnectionStatus] =\n    React.useState<ConnectionStatus>(ConnectionStatus.Disconnected);\n\n  const disconnectSocket = React.useCallback(() => {\n    socket?.close();\n    setSocket(null);\n    setConnectionStatus(ConnectionStatus.Disconnected);\n  }, [socket, setConnectionStatus]);\n\n  React.useEffect(() => {\n    if (socket) {\n      socket.onopen = () => {\n        setConnectionStatus(ConnectionStatus.Open);\n      };\n\n      socket.onmessage = (msg) => {\n        const message = JSON.parse(msg.data);\n        console.log(\"Message from BE: \", message[\"message\"]);\n        makeMove({\n          from: message[\"message\"][\"from\"],\n          to: message[\"message\"][\"to\"],\n          promotion: \"q\",\n        });\n      };\n\n      socket.onerror = () => {\n        disconnectSocket();\n        console.error(\"Websocket connection error\");\n      };\n\n      socket.onclose = () => {\n        disconnectSocket();\n      };\n    }\n  }, [disconnectSocket, setConnectionStatus, socket]);\n\n  const sendMessage = (move: string) => {\n    console.log(\"MOVE: \", move);\n    socket?.send(move);\n  };\n\n  const onCloseSocket = () => {\n    socket?.close();\n    setSocket(null);\n    setConnectionStatus(ConnectionStatus.Disconnected);\n  };\n\n  const connectSocket = () => {\n    const url = `${process.env.NEXT_PUBLIC_SOCKET_URL}`;\n    const socket = new WebSocket(url);\n    setSocket(socket);\n  };\n  // End of socket\n  const [game, setGame] = useState(new Chess());\n  const [playing, setPlaying] = useState(false);\n  const [moves, setMoves] = useState<Move[]>([]);\n  const [depth, setDepth] = useState(3);\n  const [currentTimeout, setCurrentTimeout] = useState<NodeJS.Timeout>();\n\n  const getComputerType = () => {\n    if (type === \"random\") return calculateRandomMove;\n    else if (type === \"computer\") return calculateBestMove;\n\n    return calculateMinimaxMove;\n  };\n\n  const makeMove = (move: string | ShortMove) => {\n    console.log(move);\n    const gameCopy = game;\n    const result = gameCopy.move(move);\n\n    if (result) {\n      setMoves((prevMoves) => [result, ...prevMoves]);\n      setGame(gameCopy);\n    }\n\n    return result;\n  };\n\n  const calculateRandomMove = () => {\n    const possibleMoves = game.moves();\n    if (game.isGameOver() || game.isDraw() || possibleMoves.length <= 0) return;\n\n    const randomIndex = Math.floor(Math.random() * possibleMoves.length);\n    makeMove(possibleMoves[randomIndex]);\n  };\n\n  const calculateBestMove = () => {\n    const possibleMoves = game.moves();\n    if (game.isGameOver() || game.isDraw() || possibleMoves.length <= 0) return;\n\n    let bestMove = null;\n    let bestValue = -9999;\n\n    for (const move of possibleMoves) {\n      game.move(move);\n      const boardValue = -evaluateBoard(game.board());\n      game.undo();\n\n      if (boardValue >= bestValue) {\n        bestValue = boardValue;\n        bestMove = move;\n      }\n    }\n\n    if (bestMove === null) return;\n    console.log(bestMove);\n    makeMove(bestMove);\n  };\n\n  const minimax = (\n    depth: number,\n    game: Chess,\n    alpha: number,\n    beta: number,\n    isMaximizingPlayer: boolean\n  ) => {\n    if (depth <= 0) return -evaluateBoard(game.board());\n\n    const possibleMoves = game.moves();\n\n    if (isMaximizingPlayer) {\n      let bestValue = -9999;\n      for (const move of possibleMoves) {\n        game.move(move);\n        bestValue = Math.max(\n          bestValue,\n          minimax(depth - 1, game, alpha, beta, !isMaximizingPlayer)\n        );\n        game.undo();\n\n        alpha = Math.max(alpha, bestValue);\n        if (beta <= alpha) return bestValue;\n      }\n      return bestValue;\n    } else {\n      let bestValue = 9999;\n      for (const move of possibleMoves) {\n        game.move(move);\n        bestValue = Math.min(\n          bestValue,\n          minimax(depth - 1, game, alpha, beta, !isMaximizingPlayer)\n        );\n        game.undo();\n\n        beta = Math.min(beta, bestValue);\n        if (beta <= alpha) return bestValue;\n      }\n      return bestValue;\n    }\n  };\n\n  const calculateMinimaxMove = () => {\n    const possibleMoves = game.moves();\n    if (game.isGameOver() || game.isDraw() || possibleMoves.length <= 0) return;\n\n    const searchDepth = depth;\n    let minimaxMove = null;\n    let bestValue = -9999;\n\n    for (const move of possibleMoves) {\n      game.move(move);\n      const boardValue = minimax(searchDepth - 1, game, -10000, 10000, false);\n      game.undo();\n\n      if (boardValue >= bestValue) {\n        bestValue = boardValue;\n        minimaxMove = move;\n      }\n    }\n\n    if (minimaxMove === null) return;\n    makeMove(minimaxMove);\n  };\n\n  const onPieceDrop = (sourceSquare: Square, targetSquare: Square) => {\n    if (!playing) return false;\n\n    const move = makeMove({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: \"q\",\n    });\n\n    if (move === null) return false;\n    sendMessage(move.from + move.to);\n    return true;\n  };\n\n  const resetGame = () => {\n    const gameCopy = game;\n    gameCopy.reset();\n    setGame(gameCopy);\n\n    setMoves([]);\n\n    if (currentTimeout) clearTimeout(currentTimeout);\n    setPlaying(false);\n  };\n\n  const startGame = () => {\n    // connectSocket()\n    resetGame();\n    setPlaying(true);\n  };\n\n  return {\n    game,\n    playing,\n    moves,\n\n    depth,\n    setDepth,\n\n    onPieceDrop,\n    startGame,\n    resetGame,\n  };\n};\n\nexport default useChess;\n","/home/nullchilly/code/git/web101/src/hooks/useChessHumanSocket.tsx",["676","677"],[],"import { CustomSquares, ShortMove } from \"@/types\";\nimport { Chess, Move, Square } from \"chess.js\";\nimport { useCallback, useEffect, useReducer, useState } from \"react\";\nimport { io, Socket } from \"socket.io-client\";\nimport { GameConfig, WINNER } from \"@/helpers/types\";\nimport { useLocalStorage } from \"./useLocalStorage\";\n\ntype Props = {\n  id: string;\n  userId: number | undefined;\n  name: string | undefined;\n};\n\nfunction squareReducer(squares: CustomSquares, action: Partial<CustomSquares>) {\n  return { ...squares, ...action };\n}\n\nconst useChessHumanSocket = ({ id, userId, name }: Props) => {\n  const [socket, setSocket] = useState<Socket | null>(null);\n  const [_playersInLobby, setPlayersInLobby] = useState<number>(0); // May not using it anw\n  const [pieceColor, setPieceColor] = useState<\"w\" | \"b\">(\"w\");\n  const [playable, setPlayable] = useState<boolean>(false); // True when there're 2 players in lobby\n  const [game, setGame] = useState(new Chess());\n  const [gameFen, setGameFen] = useState<string>(\"start\");\n  const [opponentName, setOpponentName] = useState<string>(\"\");\n  const [customSquares, updateCustomSquares] = useReducer(squareReducer, {\n    check: {},\n  });\n  const [winner, setWinner] = useState<WINNER>(\"unknown\");\n  // Handle prev-next move button in game review\n  const [moveIndex, setMoveIndex] = useState(0);\n  const [allGameStates, setAllGameStates] = useState<Chess[]>([]);\n\n  function getChessPosisition() {\n    return new Chess()\n  }\n\n  function handleGameEnd(winner: WINNER) {\n    setWinner(winner);\n    // Save all moves for review\n    const allMoves = game.history({ verbose: true });\n    console.log(allMoves)\n    let allStates: Chess[] = [getChessPosisition()];\n    console.log(\"handle state: \", allGameStates);\n\n    for (let i = 0; i < allMoves.length; i++) {\n      let tempState: Chess = getChessPosisition();\n      // console.log(`tempState: ${i}`, tempState.fen());\n      for (let j = 0; j <= i; j++) {\n        try {\n          tempState.move(allMoves[j]);\n        } catch (error) {\n          // console.log(\"[ERR]: \", i, j, allMoves[j], tempState.fen(), error);\n          console.log(\"[ERR]: \", error);\n        }\n      }\n      console.log(\"TEMPSTATE\", tempState.fen())\n      allStates.push(tempState);\n    }\n    setAllGameStates(allStates);\n    setMoveIndex(allStates.length - 1);\n    disconnectSocket();\n  }\n\n  const disconnectSocket = useCallback(() => {\n    socket?.close();\n    setSocket(null);\n  }, [socket]);\n\n  useEffect(() => {\n    if (socket) {\n      socket.connect();\n      socket.on(\"connect\", () => {\n        console.log(\"Connected\", socket.id);\n      });\n      socket.on(\"human-user-forfeit\", async (msg) => {\n        console.log(msg)\n        handleGameEnd(\"white\")\n      })\n\n      socket.on(\"human-new-player-join\", async (msg) => {\n        console.log(\"JOINED:\", msg);\n        try {\n          const response = JSON.parse(msg);\n          if (response[\"ok\"]) {\n            const currentNumberPlayer = response[\"numberPlayer\"];\n            const color = response[\"config\"][\"color\"];\n            const opponentName = response[\"config\"][\"opponentName\"];\n            setPlayersInLobby(currentNumberPlayer);\n            setPlayable(currentNumberPlayer === 2);\n            if (color === \"w\" || color === \"b\") setPieceColor(color);\n            if (typeof opponentName === \"string\") {\n              setOpponentName(opponentName);\n            }\n          } else {\n            if (typeof response[\"playable\"] === \"boolean\") {\n              setPlayable(response[\"playable\"]);\n            }\n            if (response[\"color\"] === \"w\" || response[\"color\"] === \"b\") {\n              setPieceColor(response[\"color\"]);\n            }\n          }\n        } catch (error) {\n          console.error(\"[!!!] Error when new user join: \", error);\n        }\n      });\n\n      socket.on(\"human-play-chess\", async (msg) => {\n        console.log(\"MOVE socket: \", msg);\n        try {\n          const response = JSON.parse(msg);\n          if(response[\"ok\"]) {\n            if (response[\"result\"]) {\n              const winner_id = response[\"result\"][\"winner\"];\n              const reason = response[\"result\"][\"reason\"];\n              console.log(\"Reason: \", reason);\n              await new Promise((r) => setTimeout(r, 1200));\n              handleGameEnd(\n                winner_id === 0 ? \"draw\" : winner_id === 1 ? \"white\" : \"black\"\n              );\n            }\n            console.log(\"Opponent move: \", response[\"move\"]);\n            makeMove(response[\"move\"]);\n          } else {\n            console.error(\"[!!!] response not ok: \", response[\"error\"]);\n          }\n\n        } catch(error) {\n          console.error(\"[!!!] Error when new user join: \", error);\n        }\n      })\n    }\n  }, [disconnectSocket, socket]);\n\n  useEffect(() => {\n    if (!socket && userId && !playable) connectSocket();\n  }, [userId]);\n\n  const connectSocket = () => {\n    const socket = io(`${process.env.NEXT_PUBLIC_SOCKET_URL}`, {\n      autoConnect: false,\n      reconnection: true,\n    });\n    if (!playable && userId) onNewPlayer(userId ?? 1, socket);\n    setSocket(socket);\n  };\n\n  const onNewPlayer = (userId: number, socket: Socket) => {\n    const newPlayerData = { id, userId, name };\n    socket.emit(\"human-new-player-join\", JSON.stringify(newPlayerData));\n  };\n\n  const [moves, setMoves] = useLocalStorage<Move[]>({\n    name: `${id}-moves`,\n    defaultValue: [],\n  });\n\n  const makeMove = (move: string | ShortMove) => {\n    console.log(move);\n    const gameCopy = game;\n    const result = gameCopy.move(move);\n\n    if (result) {\n      // setMoves(gameCopy.history({ verbose: true }));\n      setGameFen(gameCopy.fen());\n      setGame(gameCopy);\n      let kingSquare = undefined;\n      console.log(game.inCheck())\n      if (game.inCheck()) {\n        const kingPos = game.board().reduce((acc, row, index) => {\n          const squareIndex = row.findIndex(\n            (square) => {\n              if (square?.type == \"k\") {\n                console.log(square)\n              }\n              return square && square.type === \"k\" && square.color === game.turn()\n            }\n          );\n          return squareIndex >= 0\n            ? `${String.fromCharCode(squareIndex + 97)}${8 - index}`\n            : acc;\n        }, \"\");\n        kingSquare = {\n          [kingPos]: {\n            background:\n              \"radial-gradient(red, rgba(255,0,0,.8), transparent 70%)\",\n            borderRadius: \"50%\",\n          },\n        };\n      }\n      console.log(kingSquare)\n      updateCustomSquares({\n        check: kingSquare,\n      });\n\n    }\n    return result;\n  };\n\n  const sendMove = (move: string) => {\n    console.log(\"MOVE: \", move);\n    const emitData = { move, id, turn: pieceColor };\n    socket?.emit(\"human-play-chess\", JSON.stringify(emitData));\n  };\n\n  const onPieceDrop = (sourceSquare: Square, targetSquare: Square) => {\n    if (!playable) return false;\n\n    const move = makeMove({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: \"q\",\n    });\n\n    if (move === null) return false;\n    sendMove(move.from + move.to + (move.promotion ? move.promotion : \"\"));\n    return true;\n  };\n\n  const forfeitGame = () => {\n    const gameForfeited = { id: id, winner: opponentName };\n    socket?.emit(\"human-user-forfeit\", JSON.stringify(gameForfeited));\n    handleGameEnd(\"black\");\n  };\n\n  const prevMove = () => {\n    const newMoveIndex = Math.max(moveIndex - 1, 0);\n    const currentGame = allGameStates[newMoveIndex];\n    setGameFen(currentGame.fen())\n    console.log(\"ALL: \", moveIndex, allGameStates);\n    setMoveIndex(newMoveIndex);\n    setGame(currentGame);\n    let kingSquare = undefined;\n    if (currentGame.inCheck()) {\n      const kingPos = currentGame.board().reduce((acc, row, index) => {\n        const squareIndex = row.findIndex(\n          (square) =>\n            square && square.type === \"k\" && square.color === currentGame.turn()\n        );\n        return squareIndex >= 0\n          ? `${String.fromCharCode(squareIndex + 97)}${8 - index}`\n          : acc;\n      }, \"\");\n      kingSquare = {\n        [kingPos]: {\n          background:\n            \"radial-gradient(red, rgba(255,0,0,.8), transparent 70%)\",\n          borderRadius: \"50%\",\n        },\n      };\n    }\n    updateCustomSquares({ check: kingSquare }); // Reset style\n  };\n\n  const nextMove = () => {\n    const newMoveIndex = Math.min(moveIndex + 1, allGameStates.length - 1);\n    const currentGame = allGameStates[newMoveIndex];\n    setGameFen(currentGame.fen())\n    setMoveIndex(newMoveIndex);\n    setGame(currentGame);\n    let kingSquare = undefined;\n    if (currentGame.inCheck()) {\n      const kingPos = currentGame.board().reduce((acc, row, index) => {\n        const squareIndex = row.findIndex(\n          (square) =>\n            square && square.type === \"k\" && square.color === currentGame.turn()\n        );\n        return squareIndex >= 0\n          ? `${String.fromCharCode(squareIndex + 97)}${8 - index}`\n          : acc;\n      }, \"\");\n      kingSquare = {\n        [kingPos]: {\n          background:\n            \"radial-gradient(red, rgba(255,0,0,.8), transparent 70%)\",\n          borderRadius: \"50%\",\n        },\n      };\n    }\n    updateCustomSquares({ check: kingSquare }); // Reset style\n  };\n\n  return {\n    socket,\n    winner,\n    forfeitGame,\n    customSquares,\n    playable,\n    pieceColor,\n    onPieceDrop,\n    game,\n    gameFen,\n    setGameFen,\n    opponentName,\n    prevMove,\n    nextMove,\n  };\n};\n\nexport default useChessHumanSocket;\n","/home/nullchilly/code/git/web101/src/hooks/useChessSocket.tsx",["678","679"],[],"import { useReducer, useState } from \"react\";\nimport React from \"react\";\nimport { Chess, Move, Square } from \"chess.js\";\nimport { io, Socket } from \"socket.io-client\";\nimport { CustomSquares, ShortMove } from \"@/types\";\nimport { useLocalStorage } from \"./useLocalStorage\";\nimport { httpGetPlayerTimeLeft } from \"@/modules/backend-client/httpGetPlayerTimeLeft\";\nimport { GameConfig, WINNER } from \"@/helpers/types\";\n\nexport type ChessType = \"random\" | \"computer\" | \"minimax\";\n\ntype Props = {\n  id: string;\n  type: ChessType;\n  userId?: number;\n  gameConfig?: GameConfig;\n};\n\nenum ConnectionStatus {\n  Open = \"open\",\n  Connecting = \"connecting\",\n  Disconnected = \"disconnected\",\n}\n\ntype EmitData = {\n  move: string | ShortMove;\n  id: string;\n};\n\nfunction squareReducer(squares: CustomSquares, action: Partial<CustomSquares>) {\n  return { ...squares, ...action };\n}\n\nfunction getChessPosisition(variant?: number) {\n  return variant === 1 || !variant\n    ? new Chess()\n    : new Chess(\"bnnqrkrb/pppppppp/8/8/8/8/PPPPPPPP/BNNQRKRB w KQkq - 0 1\");\n}\n\nconst useChessSocket = ({ type, id, userId, gameConfig }: Props) => {\n  // Start of socket\n  const [socket, setSocket] = React.useState<Socket | null>(null);\n  const [connectionStatus, setConnectionStatus] =\n    React.useState<ConnectionStatus>(ConnectionStatus.Disconnected);\n\n  const [wPlayerTimeLeft, setWPlayerTimeLeft] = React.useState<number>(\n    (gameConfig?.timeMode ?? 0) * 60000\n  );\n  const [isWPlayerActive, setWPlayerActive] = React.useState<boolean>(false);\n\n  const [bPlayerTimeLeft, setBPlayerTimeLeft] = React.useState<number>(\n    (gameConfig?.timeMode ?? 0) * 60000\n  );\n  const [isBPlayerActive, setBPlayerActive] = React.useState<boolean>(false);\n\n  const [winner, setWinner] = React.useState<WINNER>(\"unknown\");\n\n  // Handle prev-next move button in game review\n  const [moveIndex, setMoveIndex] = React.useState(0);\n  const [allGameStates, setAllGameStates] = React.useState<Chess[]>([]);\n\n  const disconnectSocket = React.useCallback(() => {\n    socket?.close();\n    setSocket(null);\n    setConnectionStatus(ConnectionStatus.Disconnected);\n  }, [socket, setConnectionStatus]);\n\n  function handleGameEnd(winner: WINNER) {\n    setWinner(winner);\n\n    // Stop clock\n    setWPlayerActive(false);\n    setBPlayerActive(false);\n\n    // Save all moves for review\n    const allMoves = game.history({ verbose: true });\n    let allStates: Chess[] = [getChessPosisition(gameConfig?.variant)];\n    console.log(\"handle state: \", allGameStates);\n\n    for (let i = 0; i < allMoves.length; i++) {\n      let tempState: Chess = getChessPosisition(gameConfig?.variant);\n      console.log(`tempState: ${i}`, tempState.fen());\n      for (let j = 0; j <= i; j++) {\n        try {\n          tempState.move(allMoves[j]);\n        } catch (error) {\n          // console.log(\"[ERR]: \", i, j, allMoves[j], tempState.fen(), error);\n          console.log(\"[ERR]: \", error);\n        }\n      }\n      allStates.push(tempState);\n    }\n    setAllGameStates(allStates);\n    setMoveIndex(allStates.length - 1);\n    disconnectSocket();\n  }\n\n  React.useEffect(() => {\n    if (socket) {\n      socket.connect();\n      socket.on(\"connect\", () => {\n        console.log(\"Connected\", socket.id);\n      });\n\n      socket.on(\"disconnect\", () => {\n        disconnectSocket();\n      });\n\n      socket.on(\"play-chess\", async (msg) => {\n        console.log(\"Response\", msg);\n        try {\n          const message = JSON.parse(msg);\n          if (message[\"ok\"]) {\n            if (message[\"move\"]) {\n              makeMove({\n                from: message[\"move\"][\"from\"],\n                to: message[\"move\"][\"to\"],\n                promotion: \"q\",\n              });\n            }\n            if (message[\"result\"][\"winner\"] !== 3) {\n              const winner_id = message[\"result\"][\"winner\"];\n              const reason = message[\"result\"][\"reason\"];\n              console.log(\"Reason: \", reason);\n              await new Promise((r) => setTimeout(r, 1200));\n              handleGameEnd(\n                winner_id === 0 ? \"draw\" : winner_id === 1 ? \"white\" : \"black\"\n              );\n            }\n          } else {\n            console.error(\"[!!!] Play chess socket error: \", message[\"error\"]);\n          }\n        } catch (error) {\n          console.error(\"[!!!] Play chess socket error: \", error);\n        }\n      });\n\n      socket.on(\"start-game\", (msg) => {\n        console.log(\"Start game info: \", msg);\n        const message = JSON.parse(msg);\n        console.log(\"Given mess: \", message, message[\"ok\"]);\n        if (message[\"ok\"]) {\n          // White time running\n          setWPlayerActive(true);\n          setBPlayerActive(false);\n        }\n      });\n\n      socket.on(\"end-game\", (msg) => {\n        console.log(\"clean up state: \", msg);\n      });\n\n      socket.on(\"user-forfeit\", (msg) => {\n        console.log(\"user-forfeit socket message: \", msg);\n      });\n\n      socket.on(\"fetch-saved-game\", (msg) => {\n        try {\n          const response = JSON.parse(msg);\n          if (response[\"ok\"] && Number.isInteger(response[\"winner\"])) {\n            console.log(\"Res win: \", response[\"winner\"]);\n            let savedWinner: WINNER = \"unknown\";\n            switch (response[\"winner\"]) {\n              case 0:\n                savedWinner = \"draw\";\n                break;\n              case 1:\n                savedWinner = \"white\";\n              case 2:\n                savedWinner = \"black\";\n              default:\n                console.log(\"Fetched winner: \", response[\"winner\"]);\n                break;\n            }\n            if (savedWinner !== \"unknown\") {\n              handleGameEnd(savedWinner);\n            }\n            setWinner(savedWinner);\n          } else {\n            console.error(\n              \"[!!!] Error when fetching saved data: \",\n              response[\"error\"] ?? \"\"\n            );\n          }\n        } catch (error) {\n          console.error(\"[!!!] Can't fetch saved game data\");\n        }\n      });\n    }\n  }, [disconnectSocket, setConnectionStatus, socket]);\n\n  React.useEffect(() => {\n    // Auto open socket connection on page load\n    connectSocket();\n    const savedMoves = localStorage.getItem(\n      `@stockchess/useLocalStorage/${id}-moves`\n    );\n    if (savedMoves) {\n      const parsedSavedMoves = JSON.parse(savedMoves) as Move[];\n      const newGame = getChessPosisition(gameConfig?.variant);\n      console.log(\"[NEW]: \", newGame, newGame.fen());\n      try {\n        parsedSavedMoves.forEach((move) => newGame.move(move));\n      } catch (error) {\n        console.log(\"[!!!] Error in initializing saved game: \", error);\n      }\n      setGame(newGame);\n    }\n\n    async function getTime() {\n      const response = await httpGetPlayerTimeLeft({ gameID: id });\n      if (response.ok && response.data) {\n        setWPlayerTimeLeft(response.data.w * 1000);\n        setBPlayerTimeLeft(response.data.b * 1000);\n        if (game.turn() === \"w\") {\n          setWPlayerActive(true);\n          setBPlayerActive(false);\n        } else {\n          setWPlayerActive(false);\n          setBPlayerActive(true);\n        }\n      }\n    }\n    getTime();\n  }, []);\n\n  // Send latest move over socket\n  const sendMove = (move: string) => {\n    console.log(\"MOVE: \", move);\n    const emitData: EmitData = { move, id };\n    socket?.emit(\"play-chess\", JSON.stringify(emitData));\n  };\n\n  // Make sure new game id not appeared in BE\n  const cleanOldGame = () => {\n    const endGameData = { id: id };\n    socket?.emit(\"end-game\", JSON.stringify(endGameData));\n  };\n\n  const onInitGame = () => {\n    console.log(\"Running init...\");\n    const initNewGame = {\n      id,\n      userId,\n      config: gameConfig,\n    }; // TODO: Add preferences (difficulty, timer, ...)\n    socket?.emit(\"start-game\", JSON.stringify(initNewGame));\n  };\n\n  const undoMoveSocket = () => {\n    const undoMoveData = { id: id };\n    socket?.emit(\"undo\", JSON.stringify(undoMoveData));\n  };\n\n  const connectSocket = () => {\n    // TODO: Auto disconnect after a while?\n    const socket = io(`${process.env.NEXT_PUBLIC_SOCKET_URL}`, {\n      autoConnect: false,\n      reconnection: true,\n    });\n    // onInitGame(socket);\n    fetchSavedGame(socket);\n    setSocket(socket);\n  };\n\n  const fetchSavedGame = (socket: Socket) => {\n    const savedGame = { id };\n    console.log(\"Fetching saved game...\");\n    socket.emit(\"fetch-saved-game\", JSON.stringify(savedGame));\n  };\n\n  // End of socket\n  const [game, setGame] = useState(getChessPosisition(gameConfig?.variant));\n  const [playing, setPlaying] = useLocalStorage({\n    name: `${id}-is-playing`,\n    defaultValue: false,\n  });\n  const [moves, setMoves] = useLocalStorage<Move[]>({\n    name: `${id}-moves`,\n    defaultValue: [],\n  });\n  // const [moves, setMoves] = useState<Move[]>([]);\n  // const [gameFen, setGameFen] = useState<string>(\"start\");\n  const [currentTimeout, setCurrentTimeout] = useState<NodeJS.Timeout>();\n  const [customSquares, updateCustomSquares] = useReducer(squareReducer, {\n    check: {},\n  });\n\n  const makeMove = (move: string | ShortMove) => {\n    console.log(move);\n    const gameCopy = game;\n    const result = gameCopy.move(move);\n\n    if (result) {\n      setMoves(gameCopy.history({ verbose: true }));\n      setGame(gameCopy);\n\n      let kingSquare = undefined;\n      if (game.inCheck()) {\n        const kingPos = game.board().reduce((acc, row, index) => {\n          const squareIndex = row.findIndex(\n            (square) =>\n              square && square.type === \"k\" && square.color === game.turn()\n          );\n          return squareIndex >= 0\n            ? `${String.fromCharCode(squareIndex + 97)}${8 - index}`\n            : acc;\n        }, \"\");\n        kingSquare = {\n          [kingPos]: {\n            background:\n              \"radial-gradient(red, rgba(255,0,0,.8), transparent 70%)\",\n            borderRadius: \"50%\",\n          },\n        };\n      }\n      updateCustomSquares({\n        check: kingSquare,\n      });\n\n      if (game.turn() === \"b\") {\n        setBPlayerActive(true);\n        setWPlayerActive(false);\n      } else {\n        setBPlayerActive(false);\n        setWPlayerActive(true);\n      }\n    }\n\n    return result;\n  };\n\n  const onPieceDrop = (sourceSquare: Square, targetSquare: Square) => {\n    if (!playing) return false;\n\n    const move = makeMove({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: \"q\",\n    });\n\n    if (move === null) return false;\n    sendMove(move.from + move.to + (move.promotion ? move.promotion : \"\"));\n    return true;\n  };\n\n  const resetGame = () => {\n    const gameCopy = game;\n    gameCopy.reset();\n    if (gameConfig?.variant === 2) {\n      gameCopy.load(\"bnnqrkrb/pppppppp/8/8/8/8/PPPPPPPP/BNNQRKRB w KQkq - 0 1\");\n    }\n    setGame(gameCopy);\n    cleanOldGame();\n    setMoves([]);\n\n    if (currentTimeout) clearTimeout(currentTimeout);\n    setPlaying(false);\n\n    setWPlayerTimeLeft((gameConfig?.timeMode ?? 0) * 60000);\n    setBPlayerTimeLeft((gameConfig?.timeMode ?? 0) * 60000);\n    setBPlayerActive(false);\n    setWPlayerActive(false);\n\n    updateCustomSquares({ check: undefined });\n  };\n\n  const startGame = () => {\n    // NOTE: I think it's better to init socket on page load\n    // connectSocket();\n    resetGame();\n    onInitGame();\n    setPlaying(true);\n  };\n\n  // White (user, as default) forfeit => black win\n  const forfeitGame = () => {\n    const gameForfeited = { id: id };\n    socket?.emit(\"user-forfeit\", JSON.stringify(gameForfeited));\n    handleGameEnd(\"black\");\n  };\n\n  const undoMove = () => {\n    undoMoveSocket();\n\n    const gameCopy = game;\n    gameCopy.undo();\n    gameCopy.undo();\n\n    setGame(gameCopy);\n    setMoves(gameCopy.history({ verbose: true }));\n    updateCustomSquares({ check: undefined }); // Reset style\n  };\n\n  const prevMove = () => {\n    const newMoveIndex = Math.max(moveIndex - 1, 0);\n    const currentGame = allGameStates[newMoveIndex];\n    // console.log(\"ALL: \", moveIndex, allGameStates);\n    setMoveIndex(newMoveIndex);\n    setGame(currentGame);\n    let kingSquare = undefined;\n    if (currentGame.inCheck()) {\n      const kingPos = currentGame.board().reduce((acc, row, index) => {\n        const squareIndex = row.findIndex(\n          (square) =>\n            square && square.type === \"k\" && square.color === currentGame.turn()\n        );\n        return squareIndex >= 0\n          ? `${String.fromCharCode(squareIndex + 97)}${8 - index}`\n          : acc;\n      }, \"\");\n      kingSquare = {\n        [kingPos]: {\n          background:\n            \"radial-gradient(red, rgba(255,0,0,.8), transparent 70%)\",\n          borderRadius: \"50%\",\n        },\n      };\n    }\n    updateCustomSquares({ check: kingSquare }); // Reset style\n  };\n\n  const nextMove = () => {\n    const newMoveIndex = Math.min(moveIndex + 1, allGameStates.length - 1);\n    const currentGame = allGameStates[newMoveIndex];\n    setMoveIndex(newMoveIndex);\n    setGame(currentGame);\n    let kingSquare = undefined;\n    if (currentGame.inCheck()) {\n      const kingPos = currentGame.board().reduce((acc, row, index) => {\n        const squareIndex = row.findIndex(\n          (square) =>\n            square && square.type === \"k\" && square.color === currentGame.turn()\n        );\n        return squareIndex >= 0\n          ? `${String.fromCharCode(squareIndex + 97)}${8 - index}`\n          : acc;\n      }, \"\");\n      kingSquare = {\n        [kingPos]: {\n          background:\n            \"radial-gradient(red, rgba(255,0,0,.8), transparent 70%)\",\n          borderRadius: \"50%\",\n        },\n      };\n    }\n    updateCustomSquares({ check: kingSquare }); // Reset style\n  };\n\n  return {\n    game,\n    playing,\n    moves,\n    winner,\n\n    customSquares,\n\n    wPlayerTimeLeft,\n    isWPlayerActive,\n\n    bPlayerTimeLeft,\n    isBPlayerActive,\n\n    // NOTE: Since FEN can be easily extract from `games`, we dont have to maintain it\n    // gameFen,\n    // setGameFen,\n\n    onPieceDrop,\n    undoMove,\n\n    startGame,\n    resetGame,\n    forfeitGame,\n\n    prevMove,\n    nextMove,\n\n    socket,\n  };\n};\n\nexport default useChessSocket;\n","/home/nullchilly/code/git/web101/src/hooks/useLocalStorage.tsx",["680","681"],[],"import { useState, useEffect } from 'react';\n\ntype Args<T> = {\n  name: string;\n  defaultValue: T;\n};\n\nexport function useLocalStorage<T>(args: Args<T>): [T, (arg: T) => void, () => void] {\n  const { defaultValue, name } = args;\n  const [value, setValue] = useState<T | undefined>(undefined);\n  const persistenceKey = `@stockchess/useLocalStorage/${name}`;\n\n  useEffect(function didMount() {\n    if (isLocalStorageAvailable()) {\n      const persistedState = localStorage.getItem(persistenceKey);\n      if (persistedState) {\n        setValue(JSON.parse(persistedState));\n      } else {\n        setValue(defaultValue);\n      }\n    }\n  }, []);\n\n  useEffect(\n    function persistOnChange() {\n      if (isLocalStorageAvailable() && value !== undefined)\n        localStorage.setItem(persistenceKey, JSON.stringify(value));\n    },\n    [value]\n  );\n\n  function removeValue() {\n    if (isLocalStorageAvailable()) localStorage.removeItem(persistenceKey);\n  }\n\n  return [value ?? defaultValue, setValue, removeValue];\n}\n\nexport function isLocalStorageAvailable(): boolean {\n  try {\n    if (!window.localStorage || localStorage === null || typeof localStorage === 'undefined') {\n      return false;\n    }\n\n    localStorage.setItem('localStorage:test', 'value');\n    if (localStorage.getItem('localStorage:test') !== 'value') {\n      return false;\n    }\n    localStorage.removeItem('localStorage:test');\n    return true;\n  } catch {\n    return false;\n  }\n}\n","/home/nullchilly/code/git/web101/src/hooks/usePuzzleChess.tsx",["682","683"],[],"import { useEffect, useState } from \"react\";\nimport { Chess } from \"chess.js\";\nimport { Puzzle } from \"@/types\";\nimport { useRouter } from \"next/navigation\";\nimport { randomInt } from \"crypto\";\nimport { delay } from \"@/helpers/chess\"\n\nconst usePuzzleChess = (puzzleData: Puzzle) => {\n  const [solved, setSolved] = useState(false);\n  const [rated, setRated] = useState(true);\n  const [validMoves, setValidMoves] = useState<string[]>([]);\n  const [game, setGame] = useState(new Chess());\n  const [error, setError] = useState<any>(null);\n  const [message, setMessage] = useState<string>(\"\");\n  const [id, setId] = useState<string>(\"\");\n  const router = useRouter();\n  \n  useEffect(() => {\n    if (solved && rated) {\n      // const result = fetch()\n    }\n  }, [solved]);\n  \n  useEffect(() => {\n    if (puzzleData && puzzleData.fen) {\n      setData();\n    }\n  }, [puzzleData, id]);\n\n  const setData = () => {\n    if (puzzleData && puzzleData.fen) {\n      setGame(new Chess(puzzleData.fen));\n      setValidMoves(puzzleData.moves);\n      setSolved(false);\n      setRated(true);\n      setId(puzzleData.id);\n      setMessage(\"pending\");\n    }\n  };\n\n  const onIdChange = (id: string) => {\n    if (id) {\n      router.push(`/puzzle/${id}`);\n      setId(id);\n    }\n  };\n\n  const onNext = () => {\n    onIdChange(randomInt(1, 1000).toString());\n  };\n\n  const onMove = (move: any) => {\n    try {\n      const tmp = new Chess(game.fen());\n      const result = tmp.move(move);\n      console.log(\"result\", result);\n      if (result === null) {\n        return false;\n      }\n      if (result.san !== validMoves[0]) return null;\n      return result;\n    } catch (error) {\n      setError(error);\n      return false;\n    }\n  };\n\n  const onDrop = (source: string, target: string) => {\n    const move: any = onMove({\n      from: source,\n      to: target,\n      promotion: \"q\", // promote to a queen\n    });\n    if (move === false) {\n      return true;\n    }\n\n    if (!move) {\n      setMessage(\"done\");\n      if (rated) {\n        setSolved(false);\n        setRated(false);\n      }\n      return false;\n    }\n\n    setGame(new Chess(move.after) as any);\n    const computerMove = validMoves[1];\n    const remainMove = validMoves.slice(2);\n\n    setValidMoves(validMoves.slice(1));\n    if (computerMove) {\n      setMessage(\"pending\");\n      setTimeout(() => {\n        const tmp = new Chess(move.after);\n        const result = tmp.move(computerMove as any);\n        setValidMoves(remainMove);\n        setGame(new Chess(result.after) as any);\n      }, 200);\n    } else {\n      setSolved(true);\n      if (rated) {\n        setMessage(\"done\");\n        const raw = JSON.stringify({\n          \"tacticsProblemId\": id,\n          \"seconds\": 60,\n          \"isPassed\": true,\n          \"isRated\": true\n        });\n        const token = localStorage.getItem('accessToken');\n        if (token) {\n          fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}` + \"/api/puzzle/submit\", {\n            method: 'POST',\n            headers: {\n              'accessToken': token,\n              'Content-Type': 'application/json',\n            },\n            body: raw,\n          }).then(result => console.log(result))\n            .catch(error => console.log('error', error));\n        }\n        setSolved(true);\n      }\n    }\n    return true;\n  };\n\n  const onRetry = () => {\n    if (puzzleData && puzzleData.fen) {\n      setData();\n    }\n  };\n\n  \n  \n  const onHint = async () => {\n    const hintMove = validMoves[0];\n    const computerMove = validMoves[1];\n    let tmpGame = game;\n    console.log(\"validMoves:\", validMoves);\n    console.log(\"hintMove:\", hintMove);\n    console.log(\"computerMove:\", computerMove);\n    if (hintMove) {\n      setMessage(\"pending\");\n      setTimeout(() => {\n        const tmp = new Chess(tmpGame.fen());\n        const result = tmp.move(hintMove as any);\n        tmpGame = new Chess(result.after);\n        setGame(tmpGame)\n      }, 200);\n    }\n    await delay(1000);\n    console.log(2)\n    if (computerMove) {\n      setMessage(\"pending\");\n      setTimeout(() => {\n        const tmp = new Chess(tmpGame.fen());\n        const result = tmp.move(computerMove as any);\n        tmpGame = new Chess(result.after);\n        setGame(tmpGame)\n        console.log(3)\n      }, 200);\n      setValidMoves(validMoves.slice(2))\n    } else {\n      setSolved(true);\n      setRated(false);\n      setMessage(\"done\");\n      setValidMoves(validMoves.slice(1))\n    }\n    setGame(tmpGame)\n  };\n\n  const onSkip = () => {\n    onIdChange(randomInt(1, 1000).toString());\n  };\n\n  return {\n    game,\n    error,\n    message,\n    solved,\n    onDrop,\n    onSkip,\n    onHint,\n    onRetry,\n    onNext,\n  };\n};\n\nexport default usePuzzleChess;\n","/home/nullchilly/code/git/web101/src/hooks/usePuzzleData.ts",["684"],[],"import { useEffect, useState } from \"react\";\nimport { Puzzle } from \"@/types\";\n\nconst NEXT_PUBLIC_BACKEND_URL = process.env.NEXT_PUBLIC_BACKEND_URL;\n// const NEXT_PUBLIC_BACKEND_URL = \"/api\";\n\n\nexport const usePuzzleData = (id: string) => {\n\tconst [puzzle, setPuzzle] = useState<Puzzle>({\n\t\tfen: undefined,\n\t\ttitle: \"No data found\",\n\t\tplayer: \"w\",\n\t\tmoves: [],\n\t\tid: '',\n\t\trate: '?',\n\t});\n\tconst [error, setError] = useState<any>(null);\n\tconst [isLoading, setIsLoading] = useState(false);\n\t\n\tconst fetchData = async () => {\n\t\tsetIsLoading(true);\n\t\ttry {\n\t\t\tconst url = `${NEXT_PUBLIC_BACKEND_URL}/api/puzzle/rated`;\n\t\t\tlet data;\n\t\t\tif (!data) {\n\t\t\t\tconst response = await fetch(url);\n\t\t\t\tdata = await response.json();\n\t\t\t\t// cache[url] = data;\n\t\t\t\t// setCache(cache);\n\t\t\t}\n\t\t\tif (data) {\n\t\t\t\tconst player = data.fen.includes(\" b \")\n\t\t\t\t\t? \"Black\"\n\t\t\t\t\t: \"White\";\n\t\t\t\tconst moves = data.moves\n\t\t\t\t\t.replace(/\\d+\\./gi, \"\")\n\t\t\t\t\t.replace(\"..\", \"\")\n\t\t\t\t\t.split(\" \")\n\t\t\t\t\t.filter(\n\t\t\t\t\t\t(x: string) => x && ![\"*\", \"1-0\", \"0-1\", \"1/2-1/2\"].includes(x)\n\t\t\t\t\t);\n\t\t\t\tsetPuzzle({\n\t\t\t\t\tid: data.id,\n\t\t\t\t\tmoves,\n\t\t\t\t\tplayer,\n\t\t\t\t\ttitle: data.name || \"Random Match\",\n\t\t\t\t\tfen: data?.fen || \"\",\n\t\t\t\t\tresults: data.moves,\n\t\t\t\t\tdate: data.createdAt,\n\t\t\t\t\trate: data.rating,\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tsetPuzzle({\n\t\t\t\t\t...puzzle,\n\t\t\t\t})\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\tsetError(err);\n\t\t\tsetIsLoading(false);\n\t\t} finally {\n\t\t\tsetIsLoading(false);\n\t\t}\n\t}\n\t\n\tuseEffect(() => {\n\t\tif (id) {\n\t\t\tfetchData();\n\t\t}\n\t}, [id])\n\n\tconst onSkip = () => {\n\t\tfetchData();\n\t}\n\t\n\treturn { data: puzzle, error, isLoading, onSkip }\n}\n\nexport default usePuzzleData;","/home/nullchilly/code/git/web101/src/lib/utils.ts",[],[],"/home/nullchilly/code/git/web101/src/modules/async-utils/index.ts",[],[],"/home/nullchilly/code/git/web101/src/modules/backend-client/httpGetAllGameSlugs.ts",[],[],"/home/nullchilly/code/git/web101/src/modules/backend-client/httpGetPlayerTimeLeft.ts",[],[],"/home/nullchilly/code/git/web101/src/modules/backend-client/httpPostCreateBotGame.ts",[],[],"/home/nullchilly/code/git/web101/src/modules/backend-client/httpPostCreateHumanGame.ts",[],[],"/home/nullchilly/code/git/web101/src/pages/api/hello.ts",[],[],"/home/nullchilly/code/git/web101/src/pages/api/puzzle.ts",[],[],"/home/nullchilly/code/git/web101/src/pages/api/puzzleData/[id].ts",[],[],"/home/nullchilly/code/git/web101/src/types/index.ts",[],[],"/home/nullchilly/code/git/web101/src/components/Controls/HumanControls.tsx",[],[],"/home/nullchilly/code/git/web101/src/app/puzzle-duel/page.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/Controls/ControlsPuzzleDuel.tsx",["685","686","687","688"],[],"import React, {useEffect, useState} from \"react\";\nimport {Col, Divider, Row, Spin, Statistic, Tooltip} from \"antd\";\nimport {CheckSquareOutlined, CloseSquareOutlined, LoadingOutlined, MinusSquareOutlined} from \"@ant-design/icons\";\nimport {StatePuzzleDuel} from \"@/helpers/types\";\nimport PuzzleDuelHistory from \"@/components/Controls/PuzzleDuelHistory\";\nimport WhiteMove from \"@/components/icons/WhiteMove\";\nimport BlackMove from \"@/components/icons/BlackMove\";\nimport \"./styles.css\";\n\nconst { Countdown } = Statistic;\n\ntype ControlsPuzzleDuelProps = {\n\ttype?: string;\n\tname?: string;\n\tcompetitor?: string;\n\tplayer?: string;\n\tcurrentPuzzle?: number;\n\tresultL?: number[];\n\tresultR?: number[];\n\tstate?: StatePuzzleDuel;\n\thistory?: string[];\n\tonFinish: () => void;\n\tonPlay: () => void;\n}\n\nconst avatar = \"https://www.chesskid.com/images/avatars/kids/100/kid-1162.png\";\nconst dueling = \"https://www.chesskid.com/images/pieces/dueling.png\";\n\nconst ControlsPuzzleDuel : React.FC<ControlsPuzzleDuelProps> = (props) => {\n\tconst [deadline, setDeadline] = useState<number>(0);\n\tconst [result, setResult] = useState([]);\n\t\n\tconst startGame = () => {\n\t\tsetDeadline(Date.now() +  1000 * 60 * 3);\n\t}\n\t\n\tconst onTimeoutDuel = () => {\n\t\tprops.onFinish();\n\t}\n\t\n\tuseEffect(() => {\n\t\n\t}, [props.resultR]);\n\t\n\tuseEffect(() => {\n\t\tif (props.state === StatePuzzleDuel.pending) {\n\t\t\tstartGame();\n\t\t}\n\t}, [props.state]);\n\t\n\treturn (\n\t\t<div>\n\t\t\t{\n\t\t\t\tprops.state === StatePuzzleDuel.pending ?\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprops.player === \"White\" ? (\n\t\t\t\t\t\t\t\t<div className=\"bg-[#f1f1f1] w-full h-[100px] flex justify-center\">\n\t\t\t\t\t\t\t\t\t{/*\twhite first*/}\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t<WhiteMove />\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t<span className=\"headerControls text-[#321E2B]\">\n\t\t\t\t\t\t\t\t\t\tWhite to Move\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div className=\"bg-[#4B4847] w-full h-[100px] flex justify-center\">\n\t\t\t\t\t\t\t\t\t{/*\tblack first*/}\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<BlackMove />\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t<span className=\"headerControls text-[#fff]\">Black to Move</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n\t\t\t\t\t\t\t<Col className=\"gutter-row\" span={8}>\n\t\t\t\t\t\t\t\t<div className={`mt-6 items-end `}>\n\t\t\t\t\t\t\t\t\t<div className=\"object-cover h-full w-full flex items-center justify-end\">\n\t\t\t\t\t\t\t\t\t\t<div className={`items-center text-center`}>\n\t\t\t\t\t\t\t\t\t\t\t<img src={avatar} alt=\"image description\" className=\"shadow rounded-full max-w-full h-auto align-middle border-none\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Tooltip title={\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={`text-center text-slate-100 font-mono text-3xl font-bold mt-3\t`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{props.name ? props.name : \"Guest\"}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={`text-center text-slate-100 font-mono text-3xl font-bold mt-3\t`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{props.name ? props.name.length > 7 ? props.name.slice(0, 5) + \"..\" : props.name : \"Guest\"}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t{props.resultL?.map((e, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<div key = {index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{e == 1 ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckSquareOutlined style={{background: 'green', fontSize: '20px'}}/> :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te == -1 ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseSquareOutlined style={{background: 'red', fontSize: '20px'}}/> :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MinusSquareOutlined style={{background: 'gray', fontSize: '20px'}}/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col className=\"gutter-row text-center self-center\" span={8}>\n\t\t\t\t\t\t\t\t<span className={'text-slate-100 font-mono text-5xl'}>\n\t\t\t\t\t\t\t\t\tVS\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<Countdown\n\t\t\t\t\t\t\t\t\tvalue={deadline}\n\t\t\t\t\t\t\t\t\tvalueStyle={{\n\t\t\t\t\t\t\t\t\t\tcolor: '#f1f5f9',\n\t\t\t\t\t\t\t\t\t\tfontSize: '50px',\n\t\t\t\t\t\t\t\t\t\tfontFamily: 'monospace',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tformat={'mm:ss'}\n\t\t\t\t\t\t\t\t\tonFinish={onTimeoutDuel}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col className=\"gutter-row\" span={8}>\n\t\t\t\t\t\t\t\t<div className={`mt-6 items-start`}>\n\t\t\t\t\t\t\t\t\t<div className=\"object-cover h-full w-full flex items-center\">\n\t\t\t\t\t\t\t\t\t\t<div className={`items-center text-center`}>\n\t\t\t\t\t\t\t\t\t\t\t<img src={avatar} alt=\"image description\" className=\"shadow rounded-full max-w-full h-auto align-middle border-none\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Tooltip title={\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={`text-center text-slate-100 font-mono text-3xl font-bold mt-3\t`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{props.competitor ? props.competitor : \"Guest\"}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={`text-center text-slate-100 font-mono text-3xl font-bold mt-3\t`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{props.competitor ? props.competitor.length > 7 ? props.competitor.slice(0, 5) + \"..\" : props.competitor : \"Guest\"}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t{props.resultR?.map((e, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<div key = {index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{e == 1 ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckSquareOutlined style={{background: 'green', fontSize: '20px'}}/> :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te == -1 ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseSquareOutlined style={{background: 'red', fontSize: '20px'}}/> :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MinusSquareOutlined style={{background: 'gray', fontSize: '20px'}}/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }} className={`pt-8`}>\n\t\t\t\t\t\t\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }} className={`pt-2`}>\n\t\t\t\t\t\t\t<Col className={`text-center text-slate-100 text-3xl font-bold`} span={24}>\n\t\t\t\t\t\t\t\tCome on, let&apos;s go guys and get your reward\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</div>\n\t\t\t\t\t:\n\t\t\t\t\t<div className={\"items-center\"}>\n\t\t\t\t\t\t<div className=\"object-cover p-3 w-full flex justify-center\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<img src={avatar} alt=\"image description\" className=\"shadow rounded-full max-w-full h-auto border-4 border-[#518538]\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={`text-center text-slate-100 font-mono text-3xl font-bold`}>\n\t\t\t\t\t\t\t{props.name ? props.name : \"Guest\"}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Divider className={`bg-slate-100`}/>\n\t\t\t\t\t\t<div className={`text-left text-slate-100 font-mono text-3xl font-bold pl-3`}>\n\t\t\t\t\t\t\tLatest Results:\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={`text-center pt-4`}>\n\t\t\t\t\t\t\t{props.history?.map((e, index) => (\n\t\t\t\t\t\t\t\t\t<PuzzleDuelHistory\n                    key={index}\n\t\t\t\t\t\t\t\t\t\tstate={e}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={`flex items-center justify-center pt-4`}>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={dueling}\n\t\t\t\t\t\t\t\talt={\"dueling\"}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Divider className={`bg-slate-100`}/>\n\t\t\t\t\t\t<div className={`text-center h-full`}>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tprops.state === StatePuzzleDuel.wait ?\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName=\"hintButton buttonSize border-transparent w-9/12 p-1\"\n\t\t\t\t\t\t\t\t\t\tonClick={props.onPlay}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tbackground: \"#f4892e\",\n\t\t\t\t\t\t\t\t\t\t\tborderRadius: \"5px\"\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<div className={`text-center text-slate-100 font-mono text-3xl font-bold`}>\n\t\t\t\t\t\t\t\t\t\t\tPlay\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t<span className={`text-center text-slate-100 font-mono text-3xl font-bold pr-3`}>\n\t\t\t\t\t\t\t\t\t\t\tFinding\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t<Spin indicator={<LoadingOutlined style={{ fontSize: 24, color: '#f1f5f9'}} spin />} />\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nexport default ControlsPuzzleDuel\n","/home/nullchilly/code/git/web101/src/components/Controls/PuzzleDuelHistory.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/Modal/ModalDuel.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/Modal/ModalError.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/PuzzleGame/PuzzleDuel.tsx",["689"],[],"'use client';\n\nimport React, {useContext, useEffect, useState} from \"react\";\nimport {Chessboard} from \"react-chessboard\";\nimport ControlsPuzzleDuel from \"@/components/Controls/ControlsPuzzleDuel\";\nimport {UserContext} from \"@/context/UserContext\";\nimport ModalDuel from \"@/components/Modal/ModalDuel\";\nimport usePuzzleDuelSocket from \"@/hooks/usePuzzleDuelSocket\";\nimport {Chess} from \"chess.js\";\nimport {StatePuzzleDuel} from \"@/helpers/types\";\n\ntype PuzzleDuelType = {\n\ttype?: string;\n}\n\nconst PuzzleDuel : React.FC<PuzzleDuelType> = () => {\n\tconst {name, userId} = useContext(UserContext);\n\tconst {\n\t\tstart,\n\t\tstate,\n\t\tpuzzleData,\n\t\topposite,\n\t\tresultOpposite,\n\t\tgetResult,\n\t\tonPlay,\n\t\tcurrent,\n\t\tsetUserId,\n\t\tdataPuzzles,\n\t\tsocket,\n\t\tisEndGame,\n\t\twinner,\n\t\tresultL,\n\t\tresultR,\n\t\tisOpenModalResult,\n\t\tsetIsOpenModalResult,\n\t\tsubmitPuzzle,\n\t\tendGamePuzzle\n\t} = usePuzzleDuelSocket();\n\tconst [game, setGame] = useState(new Chess());\n\tconst [idPuzzle, setIdPuzzle] = useState(0);\n\tconst [validMoves, setValidMoves] = useState<string[]>([]);\n\t\n\tuseEffect(() => {\n\t\tsetUserId(userId);\n\t}, [userId]);\n\t\n\tuseEffect(() => {\n\t\tif (puzzleData && puzzleData.fen && start) {\n\t\t\tsetGame(new Chess(puzzleData.fen));\n\t\t\tsetValidMoves(puzzleData.moves);\n\t\t}\n\t}, [puzzleData, start]);\n\t\n\tconst onMove = (move: any) => {\n\t\ttry {\n\t\t\tconst tmp = new Chess(game.fen());\n\t\t\tconst result = tmp.move(move);\n\t\t\tif (result === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (result.san !== validMoves[0]) return null;\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\tconsole.error(error)\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tconst onDrop = (source: string, target: string) => {\n\t\tconst move: any = onMove({\n\t\t\tfrom: source,\n\t\t\tto: target,\n\t\t\tpromotion: \"q\", // promote to a queen\n\t\t});\n\t\tconsole.log(move)\n\t\tif (move === false) {\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\tif (!move) {\n\t\t\tif (puzzleData) {\n\t\t\t\tsubmitPuzzle(puzzleData.id, false);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tsetGame(new Chess(move.after) as any);\n\t\tconst computerMove = validMoves[1];\n\t\tconst remainMove = validMoves.slice(2);\n\n\t\tsetValidMoves(validMoves.slice(1));\n\t\tif (computerMove) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst tmp = new Chess(move.after);\n\t\t\t\tconst result = tmp.move(computerMove as any);\n\t\t\t\tsetValidMoves(remainMove);\n\t\t\t\tsetGame(new Chess(result.after) as any);\n\t\t\t}, 200);\n\t\t} else {\n\t\t\t\tif (puzzleData) {\n\t\t\t\t\tsubmitPuzzle(puzzleData.id, true);\n\t\t\t\t}\n\t\t}\n\t\treturn true;\n\t};\n\t\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"flex mt-8\">\n\t\t\t\t<div className=\"flex justify-center w-2/3\">\n\t\t\t\t\t<div className=\"w-[650px] flex pt-4 pb-4\">\n\t\t\t\t\t\t<div className=\"\">\n\t\t\t\t\t\t\t<Chessboard\n\t\t\t\t\t\t\t\tboardWidth={650}\n\t\t\t\t\t\t\t\tposition={game.fen()}\n\t\t\t\t\t\t\t\tonPieceDrop={onDrop}\n\t\t\t\t\t\t\t\tboardOrientation={'white'}\n\t\t\t\t\t\t\t\tanimationDuration={300}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex justify-center w-1/3\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"flex pt-4 pb-4\">\n\t\t\t\t\t\t\t<div className=\"max-h-[650px] h-[650px] w-[450px] border rounded-lg\">\n\t\t\t\t\t\t\t\t<ControlsPuzzleDuel\n\t\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\t\tplayer={puzzleData?.player}\n\t\t\t\t\t\t\t\t\tcompetitor={opposite ? opposite : \"Unknown\"} //TODO: mock competitor\n\t\t\t\t\t\t\t\t\tresultL={resultL}\n\t\t\t\t\t\t\t\t\tresultR={resultR}\n\t\t\t\t\t\t\t\t\tstate={state}\n\t\t\t\t\t\t\t\t\t// resultL={[1, 1, -1, 0, 0, 1, 1, -1, 0, 0]}\n\t\t\t\t\t\t\t\t\t// resultR={[1, 1, -1, 0, 1, 1, -1, 0, 0, 1]}\n\t\t\t\t\t\t\t\t\t// state={StatePuzzleDuel.finding}\n\t\t\t\t\t\t\t\t\thistory={[\"win\", \"win\", \"win\", \"win\", \"win\"]}\n\t\t\t\t\t\t\t\t\tonFinish={endGamePuzzle}\n\t\t\t\t\t\t\t\t\tonPlay={onPlay}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{isOpenModalResult && <ModalDuel isWon={winner === userId} isOpen={isOpenModalResult} onCLose={setIsOpenModalResult}/>}\n\t\t</div>\n\t)\n}\n\nexport default PuzzleDuel;","/home/nullchilly/code/git/web101/src/helpers/const.ts",[],[],"/home/nullchilly/code/git/web101/src/hooks/usePuzzleDuelSocket.tsx",["690","691","692"],[],"import {io, Socket} from \"socket.io-client\";\nimport {useCallback, useContext, useEffect, useState} from \"react\";\nimport {Puzzle} from \"@/types\";\nimport {StatePuzzleDuel} from \"@/helpers/types\";\nimport {delay} from \"@/helpers/chess\";\nimport {UserContext} from \"@/context/UserContext\";\n\nenum ConnectionStatus {\n\tOpen = \"open\",\n\tConnecting = \"connecting\",\n\tDisconnected = \"disconnected\",\n}\n\nlet nextId = 0;\n\nconst usePuzzleDuelSocket = () => {\n\tconst [socket, setSocket] = useState<Socket | null>(null);\n\tconst [connectionStatus, setConnectionStatus] =\n\t\tuseState<ConnectionStatus>(ConnectionStatus.Disconnected)\n\tconst [dataPuzzles, setDataPuzzles] = useState<Puzzle[]>([]);\n\tconst [opposite, setOpposite] = useState<string>()\n\tconst [start, setStart] = useState(false)\n\tconst [resultOpposite, setResultOpposite] = useState(false)\n\tconst [getResult, setGetResult] = useState(false)\n\tconst [winner, setWinner] = useState<number>();\n\tconst [isEndGame, setIsEndGame] = useState(false);\n\tconst [gameId, setGameId] = useState<number>()\n\tconst [state, setState] = useState<StatePuzzleDuel>(StatePuzzleDuel.wait)\n\tconst [puzzleData, setPuzzleData] = useState<Puzzle>();\n\tconst [current, setCurrent] = useState<number>(0);\n\tconst [current0, setCurrent0] = useState(0);\n\tconst [userId, setUserId] = useState(0);\n\tconst [resultL, setResultL] = useState<number[]>(Array(10).fill(0))\n\tconst [resultR, setResultR] = useState<number[]>(Array(10).fill(0))\n\tconst [isOpenModalResult, setIsOpenModalResult] = useState(false);\n\tconst [change, setChange] = useState(0);\n\t\n\tconst fetchGameId = async () => {\n\t\ttry {\n\t\t\tfetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}\t` + '/api/puzzle/game', {\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t}\n\t\t\t}).then((response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\tresponse.json().then((data) => {\n\t\t\t\t\t\tsetGameId(data.id);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tconsole.error('An unexpected error occurred:', err);\n\t\t}\n\t}\n\t\n\tconst onPlay = async () => {\n\t\tjoinGame();\n\t\tsetState(StatePuzzleDuel.finding);\n\t}\n\t\n\tconst disconnectSocket = useCallback(() => {\n\t\tsocket?.close();\n\t\tsetSocket(null);\n\t\tsetConnectionStatus(ConnectionStatus.Disconnected);\n\t}, [socket, setConnectionStatus])\n\t\n\tconst connectSocket = () => {\n\t\tconst socket = io(`${process.env.NEXT_PUBLIC_SOCKET_URL}`, {\n\t\t\tautoConnect: false,\n\t\t\treconnection: true,\n\t\t});\n\t\tconsole.log(socket)\n\t\tfetchGameId();\n\t\tsetSocket(socket);\n\t};\n\t\n\tuseEffect(() => {\n\t\tif (userId) {\n\t\t\tconnectSocket();\n\t\t}\n\t}, [userId]);\n\t\n\tuseEffect(() => {\n\t\tif (socket) {\n\t\t\tsocket.connect();\n\t\t\tsocket.on(\"connect\", () => {\n\t\t\t\tconsole.log(\"Connected:\", socket.id);\n\t\t\t})\n\t\t\t\n\t\t\tsocket.on(\"disconnect\", () => {\n\t\t\t\tdisconnectSocket();\n\t\t\t});\n\t\t\tsocket.on(\"puzzle-duel\", async (msg) => {\n\t\t\t\tconsole.log(\"Response\", msg);\n\t\t\t\ttry {\n\t\t\t\t\tconst response = JSON.parse(msg);\n\t\t\t\t\tif (response[\"status\"] === \"ready\") {\n\t\t\t\t\t\tconst listData = response.message.puzzle.puzzles;\n\t\t\t\t\t\tlet puzzles : Puzzle[] = [];\n\t\t\t\t\t\tlistData.forEach((data : any) => {\n\t\t\t\t\t\t\tif (data) {\n\t\t\t\t\t\t\t\tconst player = data.fen.includes(\" b \")\n\t\t\t\t\t\t\t\t\t? \"Black\"\n\t\t\t\t\t\t\t\t\t: \"White\";\n\t\t\t\t\t\t\t\tconst moves = data.moves\n\t\t\t\t\t\t\t\t\t.replace(/\\d+\\./gi, \"\")\n\t\t\t\t\t\t\t\t\t.replace(\"..\", \"\")\n\t\t\t\t\t\t\t\t\t.split(\" \")\n\t\t\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t\t\t(x: string) => x && ![\"*\", \"1-0\", \"0-1\", \"1/2-1/2\"].includes(x)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tpuzzles.push({\n\t\t\t\t\t\t\t\t\tid: data.id,\n\t\t\t\t\t\t\t\t\tmoves,\n\t\t\t\t\t\t\t\t\tplayer,\n\t\t\t\t\t\t\t\t\ttitle: data.name || \"Random Match\",\n\t\t\t\t\t\t\t\t\tfen: data?.fen || \"\",\n\t\t\t\t\t\t\t\t\tresults: data.moves,\n\t\t\t\t\t\t\t\t\tdate: data.createdAt,\n\t\t\t\t\t\t\t\t\trate: data.rating,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tsetDataPuzzles(puzzles)\n\t\t\t\t\t\tsetPuzzleData(puzzles[0]);\n\t\t\t\t\t} else if (response[\"status\"] === \"start_noti\") {\n\t\t\t\t\t\tconst oppo = response.message.userId2 === userId ?\n\t\t\t\t\t\t\tresponse.message.userId1 :\n\t\t\t\t\t\t\tresponse.message.userId2;\n\t\t\t\t\t\tif (oppo !== userId) {\n\t\t\t\t\t\t\tsetState(StatePuzzleDuel.pending);\n\t\t\t\t\t\t\tsetStart(true);\n\t\t\t\t\t\t\tconst profile = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/api/profile/${oppo}`, {\n\t\t\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconsole.log(profile)\n\t\t\t\t\t\t\tconsole.log(oppo)\n\t\t\t\t\t\t\tconst json = await profile.json();\n\t\t\t\t\t\t\tsetOpposite(json.data.name)\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (response[\"status\"] === \"submit_noti\") {\n\t\t\t\t\t\tif (response.message.userId !== userId) {\n\t\t\t\t\t\t\tsetGetResult(true);\n\t\t\t\t\t\t\tif (response.message.solved) {\n\t\t\t\t\t\t\t\tsetChange(1);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsetChange(-1)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (response[\"status\"] === \"solved\") {\n\t\t\t\t\t\n\t\t\t\t\t} else if (response[\"status\"] === \"end_noti\") {\n\t\t\t\t\t\tsetWinner(response.message.userId);\n\t\t\t\t\t\tsetStart(false);\n\t\t\t\t\t\tsetIsOpenModalResult(true);\n\t\t\t\t\t\tsetState(StatePuzzleDuel.wait);\n\t\t\t\t\t\tsetCurrent0(0);\n\t\t\t\t\t\tsetCurrent(0);\n\t\t\t\t\t\tsetResultR(Array(10).fill(0));\n\t\t\t\t\t\tsetResultL(Array(10).fill(0));\n\t\t\t\t\t\t// disconnectSocket()\n\t\t\t\t\t} else if (response[\"status\"] === \"error\") {\n\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error(\"[!!!] Play chess socket error: \", error);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}, [disconnectSocket, setConnectionStatus, socket]);\n\t\n\tuseEffect(() => {\n\t\tif (change == 1) {\n\t\t\tconst newList = resultR;\n\t\t\tnewList[current0] = 1\n\t\t\tsetResultR(newList);\n\t\t\tsetCurrent0(current0 + 1);\n\t\t} else if (change == -1) {\n\t\t\tconst newList = resultR;\n\t\t\tnewList[current0] = -1\n\t\t\tsetResultR(newList);\n\t\t\tsetCurrent0(current0 + 1);\n\t\t}\n\t\tconsole.log(current0)\n\t\tsetChange(0);\n\t}, [change]);\n\t\n\tconst submitPuzzle = (id: string, solved: boolean) => {\n\t\tconst raw = JSON.stringify({\n\t\t\t\"status\": \"submit\",\n\t\t\t\"message\": {\n\t\t\t\t\"userId\": userId,\n\t\t\t\t\"gameId\": gameId,\n\t\t\t\t\"puzzleId\": id,\n\t\t\t\t\"solved\": solved,\n\t\t\t}\n\t\t});\n\t\tconsole.log(raw)\n\t\tif (solved) {\n\t\t\tconst newList = resultL;\n\t\t\tnewList[current] = 1\n\t\t\tsetResultL(newList);\n\t\t} else {\n\t\t\tconst newList = resultL;\n\t\t\tnewList[current] = -1\n\t\t\tsetResultL(newList);\n\t\t}\n\t\tconsole.log(dataPuzzles.length)\n\t\tconsole.log(current)\n\t\tif (dataPuzzles.length > current + 1) {\n\t\t\tsetPuzzleData(dataPuzzles.at(current + 1));\n\t\t\tsetCurrent(current + 1)\n\t\t} else {\n\t\t\tendGamePuzzle();\n\t\t}\n\t\tsocket?.emit(\"puzzle-duel\", raw);\n\t}\n\t\n\tconst endGamePuzzle = () => {\n\t\tconst raw = JSON.stringify({\n\t\t\t\"status\": \"end_game\",\n\t\t\t\"message\": {\n\t\t\t\t\"gameId\": gameId,\n\t\t\t\t\"userId\": userId\n\t\t\t}\n\t\t});\n\t\tconsole.log(raw)\n\t\tsocket?.emit(\"puzzle-duel\", raw);\n\t}\n\t\n\tconst joinGame = () => {\n\t\tconst raw = JSON.stringify({\n\t\t\t\"status\": \"start\",\n\t\t\t\"message\": {\n\t\t\t\t\"gameId\": gameId,\n\t\t\t\t\"userId\": userId\n\t\t\t}\n\t\t});\n\t\tif (gameId) {\n\t\t\tconsole.log(raw)\n\t\t\tconsole.log(socket)\n\t\t\tsocket?.emit(\"puzzle-duel\", raw);\n\t\t}\n\t}\n\t\n\treturn {\n\t\tstart,\n\t\tstate,\n\t\tpuzzleData,\n\t\topposite,\n\t\tresultOpposite,\n\t\tgetResult,\n\t\tonPlay,\n\t\tsetUserId,\n\t\tisOpenModalResult,\n\t\tsetIsOpenModalResult,\n\t\tdataPuzzles,\n\t\tsocket,\n\t\tcurrent,\n\t\tisEndGame,\n\t\twinner,\n\t\tresultL,\n\t\tresultR,\n\t\tsubmitPuzzle,\n\t\tendGamePuzzle\n\t}\n}\n\nexport default usePuzzleDuelSocket;","/home/nullchilly/code/git/web101/src/app/admin/page.tsx",[],[],"/home/nullchilly/code/git/web101/src/components/Admin/AdminPage.tsx",["693"],[],"import React, {useContext, useEffect, useState} from \"react\";\nimport {UserContext} from \"@/context/UserContext\";\nimport {Button, Col, Empty, Modal, Row, Space, Table, Tag} from \"antd\";\nimport type { ColumnsType } from 'antd/es/table';\nimport {TagNull} from \"@/helpers/tag\";\n\ntype UserProps = {\n\tuserId: number,\n\tname: string,\n\tdateOfBirth: string,\n\tgender: string,\n\temail: string,\n\tisAdmin: boolean,\n\tuserName: string,\n}\n\ntype GameProps = {\n\tgameId: number,\n\tvariantId: number,\n\ttimeMode: number,\n\tusersId: number[],\n\tcreatedAt: string,\n\tmoves: string[],\n\tslug: string,\n\tresult: number\n}\n\nconst initPagination = {\n\tcurrent: 1,\n\tpageSize: 10,\n\tshowSizeChanger: true,\n\tpageSizeOptions: ['5', '10', '20', '50'],\n\ttotal: 0,\n};\n\nconst AdminPage = () => {\n\tconst {isAdmin, accessToken} = useContext(UserContext);\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [users, setUsers] = useState<UserProps[]>([]);\n\tconst [games, setGames] = useState<GameProps[]>([]);\n\tconst [showModalUser, setShowModalUser] = useState(false);\n\tconst [currentUser, setCurrentUser] = useState<UserProps>();\n\tconst [showModalGame, setShowModalGame] = useState(false);\n\tconst [currentGame, setCurrentGame] = useState<GameProps>();\n\tconst [showModalDeleteUser, setShowModalDeleteUser] = useState(false);\n\tconst [showModalDeleteGame, setShowModalDeleteGame] = useState(false);\n\tconst [deleteSuccess, setDeleteSuccess] = useState(false);\n\tconst [pagination, setPagination] = useState(initPagination);\n\t\n\tconst columnsUserTable: ColumnsType<UserProps> = [\n\t\t{\n\t\t\ttitle: 'UserId',\n\t\t\tdataIndex: 'userId',\n\t\t\tkey: 'userId',\n\t\t},\n\t\t{\n\t\t\ttitle: 'UserName',\n\t\t\tdataIndex: 'userName',\n\t\t\tkey: 'userName',\n\t\t},\n\t\t{\n\t\t\ttitle: 'Name',\n\t\t\tdataIndex: 'name',\n\t\t\tkey: 'name',\n\t\t},\n\t\t{\n\t\t\ttitle: 'Rolse',\n\t\t\tkey: 'isAdmin',\n\t\t\tdataIndex: 'isAdmin',\n\t\t\trender: (_, { isAdmin }) => (\n\t\t\t\t\t<Tag color={isAdmin ? 'geekblue' : 'green'} key={\"isAdmin\"}>\n\t\t\t\t\t\t{isAdmin ? \"Admin\" : \"User\"}\n\t\t\t\t\t</Tag>\n\t\t\t),\n\t\t},\n\t\t{\n\t\t\ttitle: 'Date Of Birth',\n\t\t\tdataIndex: 'dateOfBirth',\n\t\t\tkey: 'dateOfBirth',\n\t\t},\n\t\t{\n\t\t\ttitle: 'Gender',\n\t\t\tdataIndex: 'gender',\n\t\t\tkey: 'gender',\n\t\t},\n\t\t{\n\t\t\ttitle: 'Email',\n\t\t\tdataIndex: 'email',\n\t\t\tkey: 'email',\n\t\t},\n\t\t{\n\t\t\ttitle: 'Action',\n\t\t\tkey: 'action',\n\t\t\trender: (_, record) => (\n\t\t\t\t<Space size=\"middle\">\n\t\t\t\t\t<p onClick={() => {onClickDetailUser(record)}}>Info</p>\n\t\t\t\t\t<p onClick={() => {onClickDeleteUser(record)}}>Delete</p>\n\t\t\t\t</Space>\n\t\t\t),\n\t\t},\n\t];\n\t\n\tconst columnsGameTable: ColumnsType<GameProps> = [\n\t\t{\n\t\t\ttitle: 'GameId',\n\t\t\tdataIndex: 'gameId',\n\t\t\tkey: 'gameId',\n\t\t},\n\t\t{\n\t\t\ttitle: 'VariantId',\n\t\t\tdataIndex: 'variantId',\n\t\t\tkey: 'variantId',\n\t\t},\n\t\t{\n\t\t\ttitle: 'User Ids',\n\t\t\tdataIndex: 'usersId',\n\t\t\tkey: 'usersId',\n\t\t\trender: (_, {usersId}) => (\n\t\t\t\t<>\n\t\t\t\t\t{usersId?.map((userId, index) => (\n\t\t\t\t\t\t<Tag key={index} bordered={false} color={index % 2 ? 'red' : 'blue'}> {userId} </Tag>\n\t\t\t\t\t))}\n\t\t\t\t</>\n\t\t\t)\n\t\t},\n\t\t{\n\t\t\ttitle: 'Create At',\n\t\t\tdataIndex: 'createdAt',\n\t\t\tkey: 'createdAt',\n\t\t},\n\t\t{\n\t\t\ttitle: 'Time Mode',\n\t\t\tkey: 'timeMode',\n\t\t\tdataIndex: 'timeMode',\n\t\t\trender: (_, { timeMode }) => (\n\t\t\t\t<Tag color={timeMode ? 'geekblue' : 'gray'} key={\"isAdmin\"}>\n\t\t\t\t\t{timeMode ? timeMode : \"NULL\"}\n\t\t\t\t</Tag>\n\t\t\t),\n\t\t},\n\t\t{\n\t\t\ttitle: 'Moves',\n\t\t\tdataIndex: 'moves',\n\t\t\tkey: 'moves',\n\t\t\trender: (_, {moves}) => (\n\t\t\t\t<>\n\t\t\t\t\t{moves?.map((move, index) => (\n\t\t\t\t\t\tindex < 3 && <Tag key={index} bordered={false}> {move} </Tag>\n\t\t\t\t\t))}\n\t\t\t\t\t{\n\t\t\t\t\t\tmoves.length > 3 && \"...\"\n\t\t\t\t\t}\n\t\t\t\t</>\n\t\t\t)\n\t\t},\n\t\t{\n\t\t\ttitle: 'Slug',\n\t\t\tdataIndex: 'slug',\n\t\t\tkey: 'slug',\n\t\t},\n\t\t{\n\t\t\ttitle: 'Result',\n\t\t\tdataIndex: 'result',\n\t\t\tkey: 'result',\n\t\t\trender: (_, record) => (\n\t\t\t\t<>\n\t\t\t\t\t{\n\t\t\t\t\t\trecord.variantId === 3 ?\n\t\t\t\t\t\t\t<Tag color={'geekblue'}> {record.result === 1 ? 'Player 2 Win' : 'Player 1 Win'} </Tag> :\n\t\t\t\t\t\t\t<Tag color={'geekblue'}> {record.result === 1 ? 'Player 1 Win' : record.result === 2 ? 'Player 2 Win' : \"Draw\"} </Tag>\n\t\t\t\t\t}\n\t\t\t\t</>\n\t\t\t)\n\t\t},\n\t\t{\n\t\t\ttitle: 'Action',\n\t\t\tkey: 'action',\n\t\t\trender: (_, record) => (\n\t\t\t\t<Space size=\"middle\">\n\t\t\t\t\t<p onClick={() => {onClickDetailGame(record)}}>Info</p>\n\t\t\t\t\t<p onClick={() => {onClickDeleteGame(record)}}>Delete</p>\n\t\t\t\t</Space>\n\t\t\t),\n\t\t},\n\t];\n\t\n\tconst handleTableUserChange = (newPagination: any) => {\n\t\tsetPagination({\n\t\t\t...pagination,\n\t\t\tcurrent: newPagination.current,\n\t\t\tpageSize: newPagination.pageSize,\n\t\t});\n\t};\n\t\n\tconst handleTableGameChange = (newPagination: any) => {\n\t\tsetPagination({\n\t\t\t...pagination,\n\t\t\tcurrent: newPagination.current,\n\t\t\tpageSize: newPagination.pageSize,\n\t\t});\n\t};\n\t\n\tconst onClickDeleteUser = (user: UserProps) => {\n\t\tsetShowModalDeleteUser(true);\n\t\tsetCurrentUser(user);\n\t}\n\t\n\tconst onClickDeleteGame = (game: GameProps) => {\n\t\tsetShowModalDeleteGame(true);\n\t\tsetCurrentGame(game);\n\t}\n\t\n\tconst onDeleteUser = async () => {\n\t\tsetIsLoading(true);\n\t\tsetShowModalDeleteUser(false);\n\t\ttry {\n\t\t\tconst url = `${process.env.NEXT_PUBLIC_BACKEND_URL}/api/admin/profile`;\n\t\t\tconst savedToken = localStorage.getItem(\"accessToken\");\n\t\t\tconst raw = JSON.stringify({\n\t\t\t\t\"userId\": currentUser?.userId\n\t\t\t});\n\t\t\tconst response = await fetch(url, {\n\t\t\t\tmethod: \"DELETE\",\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t'accessToken': savedToken ?? accessToken,\n\t\t\t\t},\n\t\t\t\tbody: raw,\n\t\t\t});\n\t\t\tif (response.ok) {\n\t\t\t\tsetDeleteSuccess(true);\n\t\t\t\tfetchDataUser();\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t} finally {\n\t\t\tsetIsLoading(false);\n\t\t}\n\t}\n\t\n\tconst onDeleteGame = async () => {\n\t\tsetIsLoading(true);\n\t\tsetShowModalDeleteGame(false);\n\t\ttry {\n\t\t\tconst url = `${process.env.NEXT_PUBLIC_BACKEND_URL}/api/admin/game`;\n\t\t\tconst savedToken = localStorage.getItem(\"accessToken\");\n\t\t\tconst raw = JSON.stringify({\n\t\t\t\t\"gameId\": currentGame?.gameId\n\t\t\t});\n\t\t\tconsole.log(raw)\n\t\t\tconst response = await fetch(url, {\n\t\t\t\tmethod: \"DELETE\",\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t'accessToken': savedToken ?? accessToken,\n\t\t\t\t},\n\t\t\t\tbody: raw,\n\t\t\t});\n\t\t\tif (response.ok) {\n\t\t\t\tsetDeleteSuccess(true);\n\t\t\t\tfetchDataGame();\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t} finally {\n\t\t\tsetIsLoading(false);\n\t\t}\n\t}\n\t\n\tconst onCloseDeleteSuccess = () => {\n\t\tsetDeleteSuccess(false);\n\t}\n\t\n\tconst onClickDetailUser = (user: UserProps) => {\n\t\tsetCurrentUser(user);\n\t\tsetShowModalUser(true);\n\t}\n\t\n\tconst onClickDetailGame = (game: GameProps) => {\n\t\tsetCurrentGame(game);\n\t\tsetShowModalGame(true);\n\t}\n\t\n\tconst onCloseModal = () => {\n\t\tsetShowModalGame(false);\n\t\tsetShowModalUser(false);\n\t}\n\t\n\tconst fetchDataUser = async () => {\n\t\tsetIsLoading(true);\n\t\ttry {\n\t\t\tconst url = `${process.env.NEXT_PUBLIC_BACKEND_URL}/api/admin/users`;\n\t\t\tconst savedToken = localStorage.getItem(\"accessToken\");\n\t\t\tconst response = await fetch(url, {\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t'accessToken': savedToken ?? accessToken,\n\t\t\t\t},\n\t\t\t});\n\t\t\tconst data = await response.json();\n\t\t\tsetUsers(data.data.users);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t} finally {\n\t\t\tsetIsLoading(false);\n\t\t}\n\t}\n\t\n\tconst fetchDataGame = async () => {\n\t\tsetIsLoading(true);\n\t\ttry {\n\t\t\tconst url = `${process.env.NEXT_PUBLIC_BACKEND_URL}/api/admin/game`;\n\t\t\tconst savedToken = localStorage.getItem(\"accessToken\");\n\t\t\tconst response = await fetch(url, {\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t'accessToken': savedToken ?? accessToken,\n\t\t\t\t},\n\t\t\t});\n\t\t\tconst data = await response.json();\n\t\t\tsetGames(data.data.games);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t} finally {\n\t\t\tsetIsLoading(false);\n\t\t}\n\t}\n\t\n\tuseEffect(() => {\n\t\tsetShowModalGame(false)\n\t\tsetShowModalDeleteGame(false)\n\t\tsetShowModalUser(false)\n\t\tsetShowModalDeleteUser(false)\n\t\tsetDeleteSuccess(false)\n\t\tfetchDataUser()\n\t\tfetchDataGame()\n\t}, []);\n\t\n\treturn (\n\t\t<div>\n\t\t\t{isAdmin &&\n\t\t\t\t<div>\n\t\t\t\t\t<Row className={`justify-center flex p-4 mt-8`}>\n\t\t\t\t\t\t<Col>\n              <div className=\"col-start-2 col-end-4 text-3xl text-slate-100 font-mono font-bold flex items-center pl-7\">\n                List User\n              </div>\n\t\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\t\tbordered\n\t\t\t\t\t\t\t\tloading={isLoading}\n\t\t\t\t\t\t\t\trowKey={(record) => record.userId}\n\t\t\t\t\t\t\t\tdataSource={users}\n                pagination={pagination}\n\t\t\t\t\t\t\t\tonChange={handleTableUserChange}\n\t\t\t\t\t\t\t\tcolumns={columnsUserTable}\n                locale={{ emptyText: <Empty description=\"Not found Data\" /> }}\n                scroll={{ x: 1000 }}\n\t\t\t\t\t\t\t\tclassName={`self-center mt-4`}\n\t\t\t\t\t\t\t/>\n\n              <div className=\"col-start-2 col-end-4 text-3xl text-slate-100 font-mono font-bold flex items-center pl-7\">\n                List Game\n              </div>\n              <Table\n                bordered\n                loading={isLoading}\n                rowKey={(record) => record.gameId}\n                dataSource={games}\n                pagination={pagination}\n                onChange={handleTableGameChange}\n                columns={columnsGameTable}\n                locale={{ emptyText: <Empty description=\"Not found Data\" /> }}\n                scroll={{ x: 1000 }}\n                className={`self-center mt-4`}\n              />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t{\n\t\t\t\t<Modal\n\t\t\t\t\topen={showModalUser}\n\t\t\t\t\ttitle={\n\t\t\t\t\t\t<div className=\"text-2xl pl-7\">\n\t\t\t\t\t\t\tUser Info\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\tclosable={false}\n\t\t\t\t\tfooter={null}>\n\t\t\t\t\t<div className=\"text-l pl-7\">\n\t\t\t\t\t\t<div className={`m-2`}>\n\t\t\t\t\t\t\tUserId: {currentUser?.userId ? currentUser?.userId : <TagNull/>}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={`m-2`}>\n\t\t\t\t\t\t\tName: {currentUser?.name ? currentUser?.name : <TagNull/>}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={`m-2`}>\n\t\t\t\t\t\t\tGender: {currentUser?.gender ? currentUser?.gender : <TagNull/>}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={`m-2`}>\n\t\t\t\t\t\t\tEmail: {currentUser?.email ? currentUser?.email : <TagNull/>}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={`m-2`}>\n\t\t\t\t\t\t\tDate Of Birth: {currentUser?.dateOfBirth ? currentUser?.dateOfBirth : <TagNull/>}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={`text-end`}>\n\t\t\t\t\t\t<Button style={{background:'white'}} type=\"default\" onClick={onCloseModal}>Close</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</Modal>\n\t\t\t}\n\t\t\t{\n\t\t\t\t<Modal\n\t\t\t\t\topen={showModalDeleteUser}\n\t\t\t\t\ttitle={'Are you sure delete this user?'}\n\t\t\t\t\tokText= {'Yes'}\n\t\t\t\t\tokType={'danger'}\n\t\t\t\t\tcancelText= {'No'}\n\t\t\t\t\tonOk={onDeleteUser}\n\t\t\t\t\tokButtonProps={{ disabled: currentUser?.isAdmin }}\n\t\t\t\t\tonCancel={() => {setShowModalDeleteUser(false)}}\n\t\t\t\t>\n\t\t\t\t\tDo you want delete user {currentUser?.userId}\n\t\t\t\t</Modal>\n\t\t\t}\n\t\t\t{\n\t\t\t\t<Modal\n\t\t\t\t\topen={showModalGame}\n\t\t\t\t\ttitle={\n\t\t\t\t\t\t<div className=\"text-2xl pl-7\">\n\t\t\t\t\t\t\tGame Info\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\tclosable={false}\n\t\t\t\t\tfooter={null}>\n\t\t\t\t\t<div className=\"text-l pl-7\">\n\t\t\t\t\t\t<div className={`m-2`}>\n\t\t\t\t\t\t\tGame Id: {currentGame?.gameId}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={`m-2`}>\n\t\t\t\t\t\t\tVariant Id: {currentGame?.variantId}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={`m-2`}>\n\t\t\t\t\t\t\tTime Mode:\n\t\t\t\t\t\t\t<Tag color={currentGame?.timeMode ? 'geekblue' : 'gray'} className={`ml-1`}>\n\t\t\t\t\t\t\t\t{currentGame?.timeMode ? currentGame?.timeMode : \"NULL\"}\n\t\t\t\t\t\t\t</Tag>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={`m-2`}>\n\t\t\t\t\t\t\tUsers Id:\n\t\t\t\t\t\t\t<Tag bordered={false} color={'red'} className={`ml-1`}> {currentGame?.usersId[0]} </Tag>\n\t\t\t\t\t\t\tvs\n\t\t\t\t\t\t\t<Tag bordered={false} color={'blue'} className={`ml-1`}> {currentGame?.usersId[1]} </Tag>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={`m-2`}>\n\t\t\t\t\t\t\tCreated At: {currentGame?.createdAt}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={`m-2`}>\n\t\t\t\t\t\t\tMoves:\n\t\t\t\t\t\t\t{currentGame?.moves.length ?\n\t\t\t\t\t\t\t\tcurrentGame?.moves?.map((move, index) => (\n\t\t\t\t\t\t\t\t\t<Tag key={index} bordered={false}> {move} </Tag>\n\t\t\t\t\t\t\t\t)) :\n\t\t\t\t\t\t\t\t\t<TagNull/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={`m-2`}>\n\t\t\t\t\t\t\tSlug: {currentGame?.slug}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={`m-2`}>\n\t\t\t\t\t\t\tResult: {\n\t\t\t\t\t\t\tcurrentGame?.variantId === 3 ?\n\t\t\t\t\t\t\t\t<Tag color={'geekblue'}> {currentGame?.result === 1 ? 'Player 2 Win' : 'Player 1 Win'} </Tag> :\n\t\t\t\t\t\t\t\t<Tag color={'geekblue'}> {currentGame?.result === 1 ? 'Player 1 Win' : currentGame?.result === 2 ? 'Player 2 Win' : \"Draw\"} </Tag>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={`text-end`}>\n\t\t\t\t\t\t<Button style={{background:'white'}} type=\"default\" onClick={onCloseModal}>Close</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</Modal>\n\t\t\t}\n\t\t\t{\n\t\t\t\t<Modal\n\t\t\t\t\topen={showModalDeleteGame}\n\t\t\t\t\ttitle={'Are you sure delete this game?'}\n\t\t\t\t\tokText= {'Yes'}\n\t\t\t\t\tokType={'danger'}\n\t\t\t\t\tcancelText= {'No'}\n\t\t\t\t\tonOk={onDeleteGame}\n\t\t\t\t\tonCancel={() => {setShowModalDeleteUser(false)}}\n\t\t\t\t>\n\t\t\t\t\tDo you want delete game {currentGame?.gameId}\n\t\t\t\t</Modal>\n\t\t\t}\n\t\t\t{\n\t\t\t\t<Modal\n\t\t\t\t\topen={deleteSuccess}\n\t\t\t\t\ttitle={\n\t\t\t\t\t\t<div className=\"text-2xl pl-7\">\n\t\t\t\t\t\t\tDelete Success\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\tclosable={false}\n\t\t\t\t\tfooter={null}\n\t\t\t\t>\n\t\t\t\t\t<div className={`text-end`}>\n\t\t\t\t\t\t<Button style={{background:'white'}} type=\"default\" onClick={onCloseDeleteSuccess}>Close</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</Modal>\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default AdminPage;","/home/nullchilly/code/git/web101/src/components/icons/Admin.tsx",[],[],"/home/nullchilly/code/git/web101/src/helpers/tag.tsx",[],[],{"ruleId":"694","severity":1,"message":"695","line":25,"column":5,"nodeType":"696","endLine":25,"endColumn":7,"suggestions":"697"},{"ruleId":"698","severity":1,"message":"699","line":128,"column":13,"nodeType":"700","endLine":132,"endColumn":15},{"ruleId":"694","severity":1,"message":"701","line":248,"column":6,"nodeType":"696","endLine":248,"endColumn":8,"suggestions":"702"},{"ruleId":"694","severity":1,"message":"695","line":17,"column":4,"nodeType":"696","endLine":17,"endColumn":6,"suggestions":"703"},{"ruleId":"694","severity":1,"message":"695","line":16,"column":4,"nodeType":"696","endLine":16,"endColumn":6,"suggestions":"704"},{"ruleId":"698","severity":1,"message":"699","line":152,"column":25,"nodeType":"700","endLine":152,"endColumn":143},{"ruleId":"698","severity":1,"message":"699","line":88,"column":15,"nodeType":"700","endLine":92,"endColumn":17},{"ruleId":"694","severity":1,"message":"695","line":64,"column":5,"nodeType":"696","endLine":64,"endColumn":7,"suggestions":"705"},{"ruleId":"694","severity":1,"message":"706","line":68,"column":5,"nodeType":"696","endLine":68,"endColumn":16,"suggestions":"707"},{"ruleId":"698","severity":1,"message":"699","line":74,"column":6,"nodeType":"700","endLine":74,"endColumn":124},{"ruleId":"694","severity":1,"message":"695","line":49,"column":5,"nodeType":"696","endLine":49,"endColumn":7,"suggestions":"708"},{"ruleId":"698","severity":1,"message":"699","line":55,"column":6,"nodeType":"700","endLine":55,"endColumn":124},{"ruleId":"698","severity":1,"message":"699","line":19,"column":13,"nodeType":"700","endLine":22,"endColumn":14},{"ruleId":"709","severity":1,"message":"710","line":19,"column":13,"nodeType":"700","endLine":22,"endColumn":14},{"ruleId":"694","severity":1,"message":"711","line":52,"column":6,"nodeType":"696","endLine":52,"endColumn":53,"suggestions":"712"},{"ruleId":"694","severity":1,"message":"713","line":133,"column":6,"nodeType":"696","endLine":133,"endColumn":32,"suggestions":"714"},{"ruleId":"694","severity":1,"message":"715","line":137,"column":6,"nodeType":"696","endLine":137,"endColumn":14,"suggestions":"716"},{"ruleId":"694","severity":1,"message":"717","line":190,"column":6,"nodeType":"696","endLine":190,"endColumn":53,"suggestions":"718"},{"ruleId":"694","severity":1,"message":"719","line":225,"column":6,"nodeType":"696","endLine":225,"endColumn":8,"suggestions":"720"},{"ruleId":"694","severity":1,"message":"721","line":22,"column":6,"nodeType":"696","endLine":22,"endColumn":8,"suggestions":"722"},{"ruleId":"694","severity":1,"message":"723","line":29,"column":5,"nodeType":"696","endLine":29,"endColumn":12,"suggestions":"724"},{"ruleId":"694","severity":1,"message":"725","line":22,"column":6,"nodeType":"696","endLine":22,"endColumn":14,"suggestions":"726"},{"ruleId":"694","severity":1,"message":"727","line":28,"column":6,"nodeType":"696","endLine":28,"endColumn":22,"suggestions":"728"},{"ruleId":"694","severity":1,"message":"729","line":70,"column":5,"nodeType":"696","endLine":70,"endColumn":9,"suggestions":"730"},{"ruleId":"698","severity":1,"message":"699","line":82,"column":12,"nodeType":"700","endLine":82,"endColumn":130},{"ruleId":"698","severity":1,"message":"699","line":126,"column":12,"nodeType":"700","endLine":126,"endColumn":130},{"ruleId":"698","severity":1,"message":"699","line":165,"column":10,"nodeType":"700","endLine":165,"endColumn":129},{"ruleId":"698","severity":1,"message":"699","line":184,"column":8,"nodeType":"700","endLine":187,"endColumn":10},{"ruleId":"694","severity":1,"message":"731","line":45,"column":5,"nodeType":"696","endLine":45,"endColumn":13,"suggestions":"732"},{"ruleId":"694","severity":1,"message":"733","line":82,"column":5,"nodeType":"696","endLine":82,"endColumn":13,"suggestions":"734"},{"ruleId":"694","severity":1,"message":"735","line":174,"column":5,"nodeType":"696","endLine":174,"endColumn":52,"suggestions":"736"},{"ruleId":"694","severity":1,"message":"737","line":190,"column":5,"nodeType":"696","endLine":190,"endColumn":13,"suggestions":"738"},{"ruleId":"694","severity":1,"message":"739","line":339,"column":5,"nodeType":"696","endLine":339,"endColumn":7,"suggestions":"740"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.","ArrayExpression",["741"],"@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","React Hook useEffect has a missing dependency: 'accessToken'. Either include it or remove the dependency array.",["742"],["743"],["744"],["745"],"React Hook useEffect has a missing dependency: 'getInitValue'. Either include it or remove the dependency array.",["746"],["747"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook React.useEffect has a missing dependency: 'makeMove'. Either include it or remove the dependency array.",["748"],"React Hook useEffect has missing dependencies: 'handleGameEnd' and 'makeMove'. Either include them or remove the dependency array.",["749"],"React Hook useEffect has missing dependencies: 'connectSocket', 'playable', and 'socket'. Either include them or remove the dependency array.",["750"],"React Hook React.useEffect has missing dependencies: 'handleGameEnd' and 'makeMove'. Either include them or remove the dependency array.",["751"],"React Hook React.useEffect has missing dependencies: 'connectSocket', 'game', 'gameConfig?.variant', and 'id'. Either include them or remove the dependency array.",["752"],"React Hook useEffect has missing dependencies: 'defaultValue' and 'persistenceKey'. Either include them or remove the dependency array.",["753"],"React Hook useEffect has a missing dependency: 'persistenceKey'. Either include it or remove the dependency array.",["754"],"React Hook useEffect has a missing dependency: 'rated'. Either include it or remove the dependency array.",["755"],"React Hook useEffect has a missing dependency: 'setData'. Either include it or remove the dependency array.",["756"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["757"],"React Hook useEffect has a missing dependency: 'setUserId'. Either include it or remove the dependency array.",["758"],"React Hook useEffect has a missing dependency: 'connectSocket'. Either include it or remove the dependency array.",["759"],"React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["760"],"React Hook useEffect has missing dependencies: 'current0' and 'resultR'. Either include them or remove the dependency array. You can also do a functional update 'setCurrent0(c => ...)' if you only need 'current0' in the 'setCurrent0' call.",["761"],"React Hook useEffect has missing dependencies: 'fetchDataGame' and 'fetchDataUser'. Either include them or remove the dependency array.",["762"],{"desc":"763","fix":"764"},{"desc":"765","fix":"766"},{"desc":"763","fix":"767"},{"desc":"763","fix":"768"},{"desc":"763","fix":"769"},{"desc":"770","fix":"771"},{"desc":"763","fix":"772"},{"desc":"773","fix":"774"},{"desc":"775","fix":"776"},{"desc":"777","fix":"778"},{"desc":"779","fix":"780"},{"desc":"781","fix":"782"},{"desc":"783","fix":"784"},{"desc":"785","fix":"786"},{"desc":"787","fix":"788"},{"desc":"789","fix":"790"},{"desc":"791","fix":"792"},{"desc":"793","fix":"794"},{"desc":"795","fix":"796"},{"desc":"797","fix":"798"},{"desc":"799","fix":"800"},{"desc":"801","fix":"802"},"Update the dependencies array to be: [router]",{"range":"803","text":"804"},"Update the dependencies array to be: [accessToken]",{"range":"805","text":"806"},{"range":"807","text":"804"},{"range":"808","text":"804"},{"range":"809","text":"804"},"Update the dependencies array to be: [getInitValue, isLoading]",{"range":"810","text":"811"},{"range":"812","text":"804"},"Update the dependencies array to be: [disconnectSocket, makeMove, setConnectionStatus, socket]",{"range":"813","text":"814"},"Update the dependencies array to be: [disconnectSocket, handleGameEnd, makeMove, socket]",{"range":"815","text":"816"},"Update the dependencies array to be: [connectSocket, playable, socket, userId]",{"range":"817","text":"818"},"Update the dependencies array to be: [disconnectSocket, handleGameEnd, makeMove, setConnectionStatus, socket]",{"range":"819","text":"820"},"Update the dependencies array to be: [connectSocket, game, gameConfig?.variant, id]",{"range":"821","text":"822"},"Update the dependencies array to be: [defaultValue, persistenceKey]",{"range":"823","text":"824"},"Update the dependencies array to be: [persistenceKey, value]",{"range":"825","text":"826"},"Update the dependencies array to be: [rated, solved]",{"range":"827","text":"828"},"Update the dependencies array to be: [puzzleData, id, setData]",{"range":"829","text":"830"},"Update the dependencies array to be: [fetchData, id]",{"range":"831","text":"832"},"Update the dependencies array to be: [setUserId, userId]",{"range":"833","text":"834"},"Update the dependencies array to be: [connectSocket, userId]",{"range":"835","text":"836"},"Update the dependencies array to be: [disconnectSocket, setConnectionStatus, socket, userId]",{"range":"837","text":"838"},"Update the dependencies array to be: [change, current0, resultR]",{"range":"839","text":"840"},"Update the dependencies array to be: [fetchDataGame, fetchDataUser]",{"range":"841","text":"842"},[700,702],"[router]",[6822,6824],"[accessToken]",[503,505],[463,465],[1690,1692],[1738,1749],"[getInitValue, isLoading]",[1312,1314],[1434,1481],"[disconnectSocket, makeMove, setConnectionStatus, socket]",[4722,4748],"[disconnectSocket, handleGameEnd, makeMove, socket]",[4834,4842],"[connectSocket, playable, socket, userId]",[5971,6018],"[disconnectSocket, handleGameEnd, makeMove, setConnectionStatus, socket]",[7111,7113],"[connectSocket, game, gameConfig?.variant, id]",[635,637],"[defaultValue, persistenceKey]",[827,834],"[persistenceKey, value]",[756,764],"[rated, solved]",[858,874],"[puzzleData, id, setData]",[1504,1508],"[fetchData, id]",[1087,1095],"[setUserId, userId]",[2505,2513],"[connectSocket, userId]",[5112,5159],"[disconnectSocket, setConnectionStatus, socket, userId]",[5496,5504],"[change, current0, resultR]",[7746,7748],"[fetchDataGame, fetchDataUser]"]